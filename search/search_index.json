{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Gu\u00eda","text":""},{"location":"#revision","title":"Revisi\u00f3n","text":"Fecha Description 09-09-2021 * Agregaci\u00f3n de secci\u00f3n \"Modelo de dise\u00f1o de software\" 20-10-2021 * Agregaci\u00f3n de secci\u00f3n \"Accesos\" donde se integran todas las credenciales hacia los servidores 28-10-2021 * Agregaci\u00f3n de secci\u00f3n \"Accesos\"  * Agregaci\u00f3n de secci\u00f3n \"instalaciones y configuraciones\" 21-03-2022 * Documentaci\u00f3n sobre comandos de gesti\u00f3n servidores  * Agregaci\u00f3n secci\u00f3n de \"mantenimientos de servidores\"  * Agregaci\u00f3n de comandos para gestionar diferentes servidores alojado en el VPS  * Agregaci\u00f3n de c\u00f3digos fundamentales de algunas operaciones del sistemas en la secci\u00f3n \"Algoritmos\"  *Agregaci\u00f3n documentaci\u00f3n de archivo de configuraci\u00f3n VSFTPD en la secci\u00f3n \"archivo de configuraci\u00f3n\""},{"location":"#introduccion","title":"Introducci\u00f3n","text":"<p>APS Tkontrol es un software especializado en monitoreo veh\u00edculos en tiempo real que tenga conectado dispositivos de DCT, la plataforma esta divida en \"m\u00f3dulos\" en cual cada uno realiza una tarea especifica.</p> <p>La infraestructura del software \"APS Tkontrol\" est\u00e1 compuesta por una seria de herramientas y otros software que en conjunto proporcionan una soluci\u00f3n completa de la misma, cada programa, herramientas y tecnolog\u00eda cumplen una funci\u00f3n fundamental en la misma, en esta secc\u00edon se describir\u00e1 para qu\u00e9 se utiliza cada herramienta.</p>"},{"location":"#diagramas","title":"Diagramas","text":"<p>La siguiente imagen muestra la infraestructura de APS Tkontrol en capas </p>"},{"location":"#infraestructura","title":"Infraestructura","text":""},{"location":"#digitalocean","title":"DigitalOcean","text":"<p>Es un proveedor de servidores virtuales privado, actualmente se cuenta con dos servidores, cada uno de los servidores contratado tiene configuraci\u00f3n igual por lo cual en esta documentaci\u00f3n</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: digitalOcean</p> </li> <li> <p>Sitio oficial de la plataforma: link</p> </li> </ul>"},{"location":"#contenedores","title":"Contenedores","text":""},{"location":"#pm2","title":"PM2","text":"<p>Es un administrador de procesos demonio que ayuda administrar y mantener aplicaciones Node.JS, algunas caracter\u00edstica que posee este administrador son la siguiente</p> <ul> <li>Modo cluster</li> <li>Soporte de mapa fuente</li> <li>Gesti\u00f3n de registro</li> <li>Integraci\u00f3n de contenedores</li> <li>Seguimientos de procesos lanzados</li> <li>Microservicios</li> </ul> <p>Documentaci\u00f3n en la secci\u00f3n: PM2</p> <p>Sitio oficial de la plataforma: link</p>"},{"location":"#aplicacion","title":"Aplicaci\u00f3n","text":""},{"location":"#nginx","title":"NGINX","text":"<p>Es un servidor web/proxy inverso ligero de alto rendimiento y un proxy para protocolos de correo electr\u00f3nico.\u200b\u200bEs software libre y de c\u00f3digo abierto, licenciado bajo la Licencia BSD simplificada</p> <ul> <li> <p>Configuraci\u00f3n e implementado en APS Tkontrol, secci\u00f3n: NGINX</p> </li> <li> <p>Documentaci\u00f3n completa de nginx sitio oficial: link</p> </li> </ul>"},{"location":"#nodejs","title":"Node.js","text":"<p>Es un entorno en tiempo de ejecuci\u00f3n multiplataforma, de c\u00f3digo abierto, para la capa del servidor basado en el lenguaje de programaci\u00f3n JavaScript, as\u00edncrono, con E/S de datos en una arquitectura orientada a eventos y basado en el motor V8 de Google</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Node.js</p> </li> <li> <p>Documentaci\u00f3n completa de node.js sitio oficial: link</p> </li> </ul>"},{"location":"#socketio","title":"Socket.io","text":"<p>Socket.IO es una biblioteca de JavaScript para aplicaciones web en tiempo real. Permite la comunicaci\u00f3n bidireccional en tiempo real entre clientes y servidores web. Tiene dos partes: una biblioteca del lado del cliente que se ejecuta en el navegador y una biblioteca del lado del servidor para Node.js.</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Socket.io</p> </li> <li> <p>Documentaci\u00f3n completa de socket.io sitio oficial: link</p> </li> </ul>"},{"location":"#angular","title":"Angular","text":"<p>Angular es un framework para aplicaciones web desarrollado en TypeScript, de c\u00f3digo abierto, mantenido por Google, que se utiliza para crear y mantener aplicaciones web de una sola p\u00e1gina.</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Angular</p> </li> <li> <p>Documentaci\u00f3n completa de Angular sitio oficial: link</p> </li> </ul>"},{"location":"#mysql","title":"Mysql","text":"<p>MySQL es un sistema de gesti\u00f3n de bases de datos relacional desarrollado bajo licencia dual: Licencia p\u00fablica general/Licencia comercial por Oracle Corporation y est\u00e1 considerada como la base de datos de c\u00f3digo abierto m\u00e1s popular del mundo.</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Mysql</p> </li> <li> <p>Documentaci\u00f3n completa de Mysql sitio oficial: link</p> </li> </ul>"},{"location":"#postgresql","title":"PostgreSQL","text":"<p>PostgreSQL, tambi\u00e9n llamado Postgres, es un sistema de gesti\u00f3n de bases de datos relacional orientado a objetos y de c\u00f3digo abierto, publicado bajo la licencia PostgreSQL,\u200b similar a la BSD o la MIT.</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: PostgreSQL</p> </li> <li> <p>Documentaci\u00f3n completa de PostgreSQL sitio oficial: link</p> </li> </ul>"},{"location":"#vsftpd","title":"VSFTPD","text":"<p>vsftpd, (o demonio FTP muy seguro ), es un servidor FTP para sistemas similares a Unix, incluido Linux. Es el servidor FTP predeterminado en las distribuciones Linux de Ubuntu, CentOS, Fedora, NimbleX, Slackware y RHEL. Tiene la licencia GNU General Public License. Es compatible con IPv6, TLS y FTPS (expl\u00edcito desde 2.0.0 e impl\u00edcito desde 2.1.0).</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: VSFTPD</p> </li> <li> <p>Documentaci\u00f3n completa de PostgreSQL sitio oficial: link</p> </li> </ul>"},{"location":"#nominatim","title":"Nominatim","text":"<p>Nominatim es un servicio de geocodificaci\u00f3n de uso libre que utiliza como referencia las direcciones y determinados objetos de la base de datos OpenStreetMap. Los detalles de su funcionamiento se pueden consultar en su wiki. Su uso es sencillo de implementar pero, dada la escasez de datos de direcciones de OpenStreetMap en el \u00e1mbito rural, el \u00e9xito de las operaciones se encuentra en algunas zonas muy comprometido. Al ser OpenStreetMap una base de datos colaborativa, es posible corregir puntualmente cualquier direcci\u00f3n incorrecta o completar datos en aquellas zonas donde no existen.</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Nominatim</p> </li> <li> <p>Documentaci\u00f3n completa de Nominatim sitio oficial: link</p> </li> </ul>"},{"location":"#apache","title":"Apache","text":"<p>El servidor HTTP Apache es un servidor web HTTP de c\u00f3digo abierto, para plataformas Unix (BSD, GNU/Linux, etc.), Microsoft Windows, Macintosh y otras, que implementa el protocolo HTTP/1.1 y la noci\u00f3n de sitio virtual seg\u00fan la normativa RFC 2616</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Nominatim</p> </li> <li> <p>Documentaci\u00f3n completa de Nominatim sitio oficial: link</p> </li> </ul>"},{"location":"#diverso","title":"Diverso","text":""},{"location":"#lets-encrypt","title":"Let's Encrypt","text":"<p>Es una autoridad de certificaci\u00f3n que se puso en marcha el 12 de abril de 2016 y que proporciona certificados X.509 gratuitos para el cifrado de Seguridad de nivel de transporte (TLS) a trav\u00e9s de un proceso automatizado dise\u00f1ado para eliminar el complejo proceso actual de creaci\u00f3n manual, la validaci\u00f3n, firma, instalaci\u00f3n y renovaci\u00f3n de los certificados de sitios web seguros.</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Let's Encrypt</p> </li> <li> <p>Documentaci\u00f3n completa de Let's Encrypt sitio oficial: link</p> </li> </ul>"},{"location":"#cerbot","title":"Cerbot","text":"<p>Certbot es una herramienta de software gratuita y de c\u00f3digo abierto para usar autom\u00e1ticamente certificados Let's Encrypt en sitios web administrados manualmente para habilitar HTTPS.</p> <p>Certbot est\u00e1 creado por Electronic Frontier Foundation (EFF) , una organizaci\u00f3n sin fines de lucro 501 (c) 3 con sede en San Francisco, CA, que defiende la privacidad digital, la libertad de expresi\u00f3n y la innovaci\u00f3n.</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Cerbot</p> </li> <li> <p>Documentaci\u00f3n completa de Cerbot sitio oficial: link</p> </li> </ul>"},{"location":"#npm","title":"NPM","text":"<p>npm es el sistema de gesti\u00f3n de paquetes por defecto para Node.js, un entorno de ejecuci\u00f3n para JavaScript, bajo Artistic License 2.0. Para instalar un nuevo paquete ya sea en la aplicaci\u00f3n Angular o el proyecto de Node.js se utiliza la siguiente sintaxis.</p> <p><pre><code>npm install NombreDePaquete\n</code></pre> \u00f3 <pre><code>npm i NombreDePaquete\n</code></pre> - Para mas paquetes visite el sitio oficial de npm: link</p>"},{"location":"#glances","title":"Glances","text":"<p>Glances es una herramienta de monitoreo de sistemas multiplataforma escrita en Python.</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Glances</p> </li> <li> <p>Documentaci\u00f3n completa de Cerbot sitio oficial: link</p> </li> </ul>"},{"location":"#ufw","title":"UFW","text":"<p>UFW o Uncomplicated Firewall es una interfaz para iptables orientada a simplificar el proceso de configuraci\u00f3n de un firewall. Aunque iptables es una herramienta s\u00f3lida y flexible, puede resultar dif\u00edcil para los principiantes aprender a usarlo para configurar correctamente un firewall. Si desea comenzar a proteger su red y no est\u00e1 seguro de qu\u00e9 herramienta utilizar, UFW puede ser su mejor opci\u00f3n.</p> <ul> <li>Documentaci\u00f3n completa de UFW sitio oficial: link</li> </ul>"},{"location":"#amplify","title":"Amplify","text":"<p>Analizador est\u00e1tico para configuraci\u00f3n NGINX. Cuadros de mando personalizados. Descripci\u00f3n general de SLA. Alertas automatizadas. Multi usuario.</p> <ul> <li>Supervise NGINX, Linux, PHP-FPM y MySQL</li> <li>Vea conexiones, solicitudes, estado HTTP, tiempo de respuesta, tr\u00e1fico y m\u00e1s</li> <li>Cree sus propios gr\u00e1ficos para ver m\u00e9tricas por host virtual, estado HTTP y URI</li> <li>Comprenda el SLA de su aplicaci\u00f3n</li> <li>Aprenda a configurar NGINX</li> <li>Para mas detalle consulte la documentaci\u00f3n completa: link</li> </ul>"},{"location":"#devops","title":"DevOps","text":""},{"location":"#git","title":"GIT","text":"<p>es un software de control de versiones dise\u00f1ado por Linus Torvalds, pensando en la eficiencia, la confiabilidad y compatibilidad del mantenimiento de versiones de aplicaciones cuando estas tienen un gran n\u00famero de archivos de c\u00f3digo fuente. Su prop\u00f3sito es llevar registro de los cambios en archivos de computadora incluyendo coordinar el trabajo que varias personas realizan sobre archivos compartidos en un repositorio de c\u00f3digo.</p> <ul> <li> <p>Documentaci\u00f3n en la secci\u00f3n: Git</p> </li> <li> <p>Documentaci\u00f3n completa de GIT sitio oficial: link</p> </li> </ul>"},{"location":"#github","title":"Github","text":"<p>GitHub es una forja para alojar proyectos utilizando el sistema de control de versiones Git. Se utiliza principalmente para la creaci\u00f3n de c\u00f3digo fuente de programas de ordenador. El software que opera GitHub fue escrito en Ruby on Rails. Desde enero de 2010, GitHub opera bajo el nombre de GitHub, Inc.</p> <ul> <li>Sitio oficial: link</li> </ul>"},{"location":"#karma","title":"Karma","text":"<p>Karma es el test-runner, es decir, el m\u00f3dulo que permite automatizar algunas de las tareas de las suites de testing, como Jasmine. Karma, adem\u00e1s, ha sido desarrollado directamente por el equipo de Angular, lo cual, en cierto modo, nos da alguna garant\u00eda de que va a seguir existiendo de aqu\u00ed a un tiempo, por lo que parece una buena opci\u00f3n.</p> <ul> <li>Documentaci\u00f3n en la secci\u00f3n: Karma</li> </ul>"},{"location":"#yvy","title":"YVY","text":"<p>Ivy es el nombre en clave de Angular canalizaci\u00f3n de compilaci\u00f3n y renderizado de pr\u00f3xima generaci\u00f3n Con la versi\u00f3n 9 y posteriores de Angular, el nuevo compilador y las instrucciones de tiempo de ejecuci\u00f3n se utilizan de forma predeterminada en lugar del compilador y el tiempo de ejecuci\u00f3n m\u00e1s antiguos, conocido como View Engine.</p>"},{"location":"algoritmos/","title":"Algoritmos principales","text":""},{"location":"algoritmos/#calculo-de-distancia-entre-dos-puntos","title":"C\u00e1lculo de distancia entre dos puntos","text":""},{"location":"algoritmos/#formula","title":"F\u00f3rmula","text":"<p>Es una ecuaci\u00f3n utilizada para calculo de distancias de un circulo entre dos puntos, conociendo sus latitudes y longitudes.</p> <p>Para cualquier par de puntos sobre una esfera (radianes): </p> <p></p> <p>donde</p> <ul> <li>semiversin es la funci\u00f3n semiverseno, semiversin (\u03b8) = sin2 (\u03b8/2) = (1 - cos (\u03b8))/2</li> <li>d es la distancia entre dos puntos (sobre un c\u00edrculo m\u00e1ximo de la esfera, v\u00e9ase distancia esf\u00e9rica),</li> <li>R es el radio de la esfera,</li> <li>\u03c6 1 es la latitud del punto 1,</li> <li>\u03c6 2 es la latitud del punto 2, y</li> <li>\u0394 \u03bb es la diferencia de longitudes</li> </ul>"},{"location":"algoritmos/#algoritmo-javascript","title":"Algoritmo Javascript","text":"<p>Se crea un archivo typescript llamado <code>functions.ts</code> y creamos una funcion llamado: <code>haversineDistance</code></p> <p>C\u00f3digo: <pre><code>export const haversineDistance = ([lat1, lon1]: number[], [lat2, lon2]: number[], isMiles: boolean = false) =&gt; {\n\n        const toRadian = (angle: number) =&gt; (Math.PI / 180) * angle;\n        const distance = (a: number, b: number) =&gt; (Math.PI / 180) * (a - b);\n        const RADIUS_OF_EARTH_IN_KM = 6371;\n\n        const dLat = distance(lat2, lat1);\n        const dLon = distance(lon2, lon1);\n\n        lat1 = toRadian(lat1);\n        lat2 = toRadian(lat2);\n\n        // Haversine Formula\n        const a =\n          Math.pow(Math.sin(dLat / 2), 2) +\n          Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n        const c = 2 * Math.asin(Math.sqrt(a));\n\n        let finalDistance = RADIUS_OF_EARTH_IN_KM * c;\n\n        if (isMiles) {\n          finalDistance /= 1.60934;\n        }\n\n        return finalDistance*1000;\n};\n</code></pre></p> <p>Uso:</p> <pre><code>import * as functions from '../funtions/global-functions';\n\nvar distancia = functions.haversineDistance([latitud1, longitud1], [latitud2, longitud2]);\n</code></pre>"},{"location":"algoritmos/#calculo-de-un-punto-dentro-de-un-poligono","title":"C\u00e1lculo de un punto dentro de un pol\u00edgono","text":"<p>Ray casting hace referencia al uso de la intersecci\u00f3n rayo-superficie para solucionar una variedad de problemas en gr\u00e1ficos por ordenador y geometr\u00eda computacional. el siguiente algoritmo resuelve un problema de evaluar si una coordenada en el espacio esta o no dentro del pol\u00edgono.</p>"},{"location":"algoritmos/#algoritmo-javascript_1","title":"Algoritmo Javascript","text":"<p>Se crea un archivo typescript llamado <code>functions.ts</code> y creamos una funcion llamado: <code>isMarkerInsidePolygonPoint</code></p> <p>C\u00f3digo: <pre><code>export function isMarkerInsidePolygonPoint(lat: any, lng: any, poly: any) {\n    let inside = false;\n    const x = lat;\n    const y = lng;\n    // console.log('poly: ', poly);\n    const polyPoints = poly;\n    for (let i = 0, j = polyPoints.length - 1; i &lt; polyPoints.length; j = i++) {\n        const xi = polyPoints[i].lat;\n        const yi = polyPoints[i].lng;\n        const xj = polyPoints[j].lat;\n        const yj = polyPoints[j].lng;\n\n        const intersect = ((yi &gt; y) !== (yj &gt; y))\n            &amp;&amp; (x &lt; (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n\n    return inside;\n}\n</code></pre> Uso: <pre><code>import * as functions from '../funtions/global-functions';\n\nvar isInside: boolean = functions.isMarkerInsidePolygonPoint(lat0, lng0, [{lat: lat1, lng: lng1},{lat: lat2, lng: lng2},{lat: lat3, lng: lng3}]);\n</code></pre></p>"},{"location":"algoritmos/#calculo-de-un-punto-dentro-de-un-circulo","title":"C\u00e1lculo de un punto dentro de un circulo","text":"<p>La f\u00f3rmula para saber si un punto (latitud, longitud) est\u00e1 dentro de un circulo es basicamente evaluar un punto cualquiera y el punto centro del circulo y evaluar si es mayor a su radio de ser que es un n\u00famero menos, significa que el punto est\u00e1 dentro del circulo de lo contrario no.</p>"},{"location":"algoritmos/#algoritmo-javascript_2","title":"Algoritmo Javascript","text":"<p>Se crea un archivo typescript llamado <code>functions.ts</code> y creamos una funcion llamado: <code>isMarkerInsideCircle</code></p> <p>C\u00f3digo: <pre><code>export function isMarkerInsideCircle([lat1, lon1]: number[], [lat2, lon2, radio]: number[]) {\n    var d = haversineDistance([lat1, lon1], [lat2, lon2]);\n    if(d &lt; radio) {\n        return true;\n    } else {\n        return false;\n    }\n}\n</code></pre> Uso: <pre><code>import * as functions from '../funtions/global-functions';\n\nvar isInside: boolean = functions.isMarkerInsideCircle([lat1, lng1], [lat2, lng2, radio]]);\n</code></pre></p>"},{"location":"archivos_configuracion/","title":"ARCHIVOS DE CONFIGURACI\u00d3N","text":""},{"location":"archivos_configuracion/#archivos-de-configuracion-nginx","title":"ARCHIVOS DE CONFIGURACI\u00d3N NGINX","text":"<p>Los archivos de configuraci\u00f3n implementado en APS TKONTROL y OPS TKONTROL se detallan a continuaci\u00f3n.</p> <p>Directorio de archivo de configuraci\u00f3n de nginx</p> <pre><code>sudo nano /etc/nginx/sites-available/default\n</code></pre>"},{"location":"archivos_configuracion/#servidor-1","title":"Servidor #1","text":"<pre><code># servidor SSL APS.TKONTROL.COM\nserver {\n    # Puerto de escucha\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n\n    # Nombre del servidor (nombre de dominio o subdominio)\n    server_name aps.tkontrol.com;\n\n    # SSL\n    ssl_certificate /etc/letsencrypt/live/aps.tkontrol.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/aps.tkontrol.com/privkey.pem;\n\n    # security\n    include nginxconfig.io/security.conf;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n\n    location ~* \\.(eot|ttf|woff|woff2)$ {\n            add_header Access-Control-Allow-Origin *;   \n    }\n\n    ## Proyecto angular\n    location / {\n        root /var/www/html/dist;\n        index  index.html index.htm;\n        try_files $uri $uri/ /index.html;\n    }\n\n    # reverse proxy nodejs\n    location /api {\n        proxy_request_buffering off;\n        proxy_buffering off;\n        proxy_read_timeout 600s;\n        proxy_connect_timeout 500s;\n        rewrite /api/(.*) /$1  break;\n        proxy_pass http://127.0.0.1:5000/;\n        include nginxconfig.io/proxy.conf;\n    }\n\n    # reverse proxy nodejs auxilar\n    location /aux {\n        proxy_request_buffering off;\n        proxy_buffering off;\n        proxy_read_timeout 600s;\n        proxy_connect_timeout 500s;\n        rewrite /aux/(.*) /$1  break;\n        proxy_pass http://127.0.0.1:3551/;\n        include nginxconfig.io/proxy.conf;\n    }\n\n    # Socket.io\n    location /socket.io {\n        proxy_pass http://127.0.0.1:5000/socket.io/;\n        proxy_set_header  X-Real-IP $remote_addr;\n        proxy_set_header  X-Real-Port $remote_port;\n        include nginxconfig.io/proxy.conf;\n    }\n\n    # Gateway\n    location /gateway {\n        rewrite /gateway/(.*) /$1 break;\n        proxy_pass http://127.0.0.1:4913/;\n        include nginxconfig.io/proxy.conf;\n    }\n\n    # additional config\n    include nginxconfig.io/general.conf;\n\n    location /srv1 {\n                proxy_pass http://127.0.0.1:5000/socket.io/;\n                include nginxconfig.io/proxy.conf;\n        }\n\n    location /srv2 {\n                proxy_pass http://167.172.122.2:5000/socket.io/;\n                include nginxconfig.io/proxy.conf;\n        }\n}\n\n# subdomains redirect APS.TKONTROL.COM\nserver {\n    # Puerto de escucha\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n\n    # Nombre del servidor\n    server_name aps.tkontrol.com;\n\n    # SSL\n    ssl_certificate /etc/letsencrypt/live/aps.tkontrol.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/aps.tkontrol.com/privkey.pem;\n\n    # redirecciona a https://aps.tkontrol.com\n    return 301 https://aps.tkontrol.com$request_uri;\n}\n\n# HTTP redirect\nserver {\n    # Puerto de escucha\n    listen 80;\n    listen [::]:80;\n\n    # Nombre del servidor\n    server_name aps.tkontrol.com;\n\n    # Retorna a https://aps.tkontrol.com\n    return 301 https://aps.tkontrol.com$request_uri;\n}\n\n#-----------------------------------------------------------------------------------------------\n# servidor tkontrol.com\nserver {\n    if ($host = tkontrol.com) {\n        return 301 https://$host$request_uri;\n    } \n    # managed by Certbot\n\n\n    listen 80 default_server;\n    listen [::]:80 default_server;\n    #\n    root /var/www/html/sitio-web-tkontrol;\n    # Add index.php to the list if you are using PHP\n    index index.html index.htm index.php;\n    server_name tkontrol.com;\n\n    return 301 https://tkontrol.com$request_uri;\n}\n\nserver {\n    listen [::]:443 ssl; #ipv6only=on;\n    listen 443 ssl;\n\n    include /etc/nginx/snippets/self-signed.conf;   \n    include /etc/letsencrypt/options-ssl-nginx.conf;\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;  \n\n    root /var/www/html/sitio-web-tkontrol;\n    index index.php;\n\n    server_name tkontrol.com;\n\n    location / {\n        #root\n        try_files $uri $uri/ /index.php?q=$uri&amp;$args;\n    }\n\n    location ~ \\.php$ {\n        include snippets/fastcgi-php.conf;\n        fastcgi_pass unix:/run/php/php7.4-fpm.sock;\n    }\n\n    ssl_certificate /etc/letsencrypt/live/tkontrol.com/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/tkontrol.com/privkey.pem; # managed by Certbot\n}\n# -----------------------------------------------------------------------------------------------\n# servidor ops.tkontrol.com\n#server {\n#   if ($host = ops.tkontrol.com) {\n#       return 301 https://$host$request_uri;\n#   }\n\n#   listen 80;\n#   listen [::]:80 ipv6only=on;\n\n#   root /var/www/html/ops;\n#   index index.html index.htm index.php;\n#   server_name ops.tkontrol.com;\n\n#   return 301 https://ops.tkontrol.com;\n\n\n#}\n\n#server {\n#   listen [::]:443 ssl; #ipv6only=on;\n#   listen 443 ssl;\n\n#   include /etc/nginx/snippets/self-signed.conf;\n#   include /etc/letsencrypt/options-ssl-nginx.conf;\n#   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;\n\n#   root /var/www/html/ops;\n#   index index.php;\n\n#   server_name ops.tkontrol.com;\n\n#   location / {\n#       try_files $uri $uri/ /index.php?q=$uri$args;\n#   }\n\n#   location ~\\.php$ {\n#       include snippets/fastcgi-php.conf;\n#       fastcgi_pass unix:/run/php/php7.4-fpm.sock;\n#   }\n#    ssl_certificate /etc/letsencrypt/live/ops.tkontrol.com/fullchain.pem; # managed by Certbot\n#    ssl_certificate_key /etc/letsencrypt/live/ops.tkontrol.com/privkey.pem;\n # managed by Certbot\n#}\n# ---------------------------------------------------------------------------------------------- \n# ops prueba\n\nserver {\n        listen 80;\n\n        root /var/www/html/mkdocs;\n        index index.html index.htm index.nginx-debian.html index.php;\n\n       server_name doc.tkontrol.com;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n</code></pre>"},{"location":"archivos_configuracion/#servidor-2","title":"Servidor #2","text":"<pre><code># Serverdor SSL OPS.TKONTROL.COM\nserver {\n    # Puerto de escucha\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n\n    # Nombre del servidor (nombre de dominio o subdominio)\n    server_name ops.tkontrol.com;\n\n    # SSL\n    ssl_certificate /etc/letsencrypt/live/ops.tkontrol.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/ops.tkontrol.com/privkey.pem;\n\n    # Security\n    #include nginxconfig.io/security.conf;\n    proxy_set_header Upgrade $http_upgrade; \n    proxy_set_header Connection \"upgrade\";\n    #add_header Content-Security-Policy   \"default-src 'self' http: https: data: blob: 'unsafe-inline'\" always; \n    #add_header Access-Control-Allow-Origin *;\n    #add_header Access-Control-Allow-Origin \"origin-list\"\n    #add_header 'Access-Control-Allow-Origin' '';\n    add_header Access-Control-Allow-Origin *;\n\n    root /var/www/html/ops;\n    index index.php;\n\n    # Proyecto conteo pasajeros\n    location / {\n        #root /var/www/html/ops;\n        #index index.php;\n        try_files $uri $uri/ /index.php?q=$uri$args;\n    }\n\n        # reverse proxy nodejs\n    location /api {\n        proxy_request_buffering off;\n        proxy_buffering off;\n        proxy_read_timeout 600s;\n        proxy_connect_timeout 500s;\n        rewrite /api/(.*) /$1  break;\n        proxy_pass http://127.0.0.1:5000/;\n        include nginxconfig.io/proxy.conf;\n    }\n\n    # Socket.io\n    location /socket.io {\n        #add_header Content-Security-Policy   \"default-src 'self' http: https: data: blob: 'unsafe-inline'\" always;\n        proxy_pass http://127.0.0.1:5000/socket.io/;\n        include nginxconfig.io/proxy.conf;\n    }\n\n    # Gateway\n    location /gateway {\n        rewrite /gateway/(.*) /$1 break;\n        proxy_pass http://127.0.0.1:4913/;\n        include nginxconfig.io/proxy.conf;\n    }\n\n    # addicional config\n    include nginxconfig.io/general.conf;\n\n    # pass PHP scripts to FastCGI server\n    #\n    location ~ \\.php$ {\n        include snippets/fastcgi-php.conf;\n        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;\n    }\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx one\n    #  \n    location ~ /\\.ht {\n        deny all;\n    }\n}\n\n# subdomains redirect OPS.TKONTROL.COM\nserver {\n    # Puerto de escucha\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n\n    # Nombre del servidor\n    server_name ops.tkontrol.com;\n\n    # SSL\n    ssl_certificate /etc/letsencrypt/live/ops.tkontrol.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/ops.tkontrol.com/privkey.pem;\n\n    # redireccionar a https://ops.tkontrol.com\n    return 301 https://ops.tkontrol.com$request_uri;\n}\n\n# HTTP redirect\nserver {\n    # Puerto de escucha\n    listen 80;\n    listen [::]:80;\n\n    # Nombre del servidor\n    server_name ops.tkontrol.com;\n\n    # Retorna a https://ops.tkontrol.com\n    return 301 https://ops.tkontrol.com$request_uri;\n}\n\n# -------------------------------------------------------------------------------------------------------------------------\n# server nominatim.tkontrol.com\n\nserver {\n        if ($host = nominatim.tkontrol.com) {\n                return 301 https://$host$request_uri;\n        }\n        # managed by Certbot\n\n\n        listen 80;\n        listen [::]:80 ipv6only=on;\n        #\n        root /srv/nominatim/build/website;\n        # Add index.php to the list if you are using PHP\n        index search.php index.php index.html index.htm index.php;\n        server_name nominatim.tkontrol.com;\n\n        return 301 https://nominatim.tkontrol.com$request_uri;\n}\n\nserver {\n        listen [::]:443 ssl; #ipv6only=on;\n        listen 443 ssl;\n\n        #include /etc/nginx/snippets/self-signed.conf;\n        include /etc/letsencrypt/options-ssl-nginx.conf;\n        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;\n\n        root /srv/nominatim/build/website;\n        index search.php index.php index.nginx-debian.html;\n\n        server_name nominatim.tkontrol.com;\n\n        #location / {\n                #root\n        #        try_files $uri $uri/ /index.php?q=$uri&amp;$args;\n        #}\n\n    location / {\n        try_files $uri $uri/ @php;\n    }\n\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n                fastcgi_pass unix:/run/php/php7.4-fpm.sock;\n        }\n    location @php {\n        fastcgi_param SCRIPT_FILENAME \"$document_root$uri.php\";\n        fastcgi_param PATH_TRANSLATED \"$document_root$uri.php\";\n        fastcgi_param QUERY_STRING    $args;\n        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n    }\n\n    location ~ [^/]\\.php(/|$) {\n        fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\n        if (!-f $document_root$fastcgi_script_name) {\n            return 404;\n        }\n        fastcgi_pass unix:/var/run/php7.4-fpm.sock;\n        fastcgi_index search.php;\n        include fastcgi.conf;\n    }\n    location ~ \\.css {\n        add_header  Content-Type    text/css;\n    }\n    location ~ \\.js {\n        add_header  Content-Type    application/x-javascript;\n    }\n\n    ssl_certificate /etc/letsencrypt/live/nominatim.tkontrol.com/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/nominatim.tkontrol.com/privkey.pem; # managed by Certbot\n}\n\n# -------------------------------------------------------------------------------------------------------------------------------------------------\n\n# servidor SSL SRV2.TKONTROL.COM\nserver {\n        # Puerto de escucha\n        listen 443 ssl http2;\n        listen [::]:443 ssl http2;\n\n        # Nombre del servidor (nombre de dominio o subdominio)\n        server_name srv2.tkontrol.com;\n\n        # SSL\n    ssl_certificate /etc/letsencrypt/live/srv2.tkontrol.com/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/srv2.tkontrol.com/privkey.pem; # managed by Certbot\n\n        # security\n        include nginxconfig.io/security.conf;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        #add_header Content-Security-Policy   \"default-src 'self' http: https: data: blob: 'unsafe-inline'\" always;\n    #add_header Content-Security-Policy \"connect-src 'self' wss://srv2.tkontrol.com https://srv2.tkontrol.com;\" always;\n        # Proyecto default nginx\n        location / {\n                root /var/www/html;\n                index  index.html index.htm index.nginx-debian.html;\n                try_files $uri $uri/ /index.html;\n        }\n\n        # reverse proxy nodejs\n        location /api {\n                proxy_request_buffering off;\n                proxy_buffering off;\n                proxy_read_timeout 600s;\n                proxy_connect_timeout 500s;\n                rewrite /api/(.*) /$1  break;\n                proxy_pass http://127.0.0.1:5000/;\n                include nginxconfig.io/proxy.conf;\n        }\n\n        # reverse proxy nodejs auxilar\n    location /aux {\n        proxy_request_buffering off;\n        proxy_buffering off;\n        proxy_read_timeout 600s;\n        proxy_connect_timeout 500s;\n        rewrite /aux/(.*) /$1  break;\n        proxy_pass http://127.0.0.1:3551/;\n        include nginxconfig.io/proxy.conf;\n    }\n\n        # Socket.io\n        location /socket.io {\n                proxy_pass http://127.0.0.1:5000/socket.io/;\n                include nginxconfig.io/proxy.conf;\n        }\n\n        # Gateway\n        location /gateway {\n                rewrite /gateway/(.*) /$1 break;\n                proxy_pass http://127.0.0.1:4913/;\n                include nginxconfig.io/proxy.conf;\n        }\n\n        # additional config\n        include nginxconfig.io/general.conf;\n\n}\n\n# subdomains redirect SRV2.TKONTROL.COM\nserver {\n        # Puerto de escucha\n        listen 443 ssl http2;\n        listen [::]:443 ssl http2;\n\n        # Nombre del servidor\n        server_name srv2.tkontrol.com;\n\n        # SSL\n        ssl_certificate /etc/letsencrypt/live/srv2.tkontrol.com/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/srv2.tkontrol.com/privkey.pem;\n\n        # redireccionar a https://srv2.tkontrol.com\n        return 301 https://srv2.tkontrol.com$request_uri;\n\n    ssl_certificate /etc/letsencrypt/live/srv2.tkontrol.com/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/srv2.tkontrol.com/privkey.pem; # managed by Certbot\n}\n\n# HTTP redirect\nserver {\n    if ($host = srv2.tkontrol.com) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n\n\n        # Puerto de escucha\n        listen 80;\n        listen [::]:80;\n\n        # Nombre del servidor\n        server_name srv2.tkontrol.com;\n\n        # Retorna a https://srv2.tkontrol.com\n        return 301 https://srv2.tkontrol.com$request_uri;\n}\n\n# --------------------------------------------------------------------------------------------------------------------------------------\n# server de prueba\nserver {\n        listen 80;\n\n        root /var/www/html/webservices_soap;\n        index index.php index.htm index.nginx-debian.html;\n\n       server_name aux.tkontrol.com;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n\n    # pass PHP scripts to FastCGI server\n        #\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n        fastcgi_pass unix:/run/php/php7.4-fpm.sock;\n        }\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        location ~ /\\.ht {\n                deny all;\n        }\n\n}\n</code></pre>"},{"location":"archivos_configuracion/#archivos-de-configuracion-mysql","title":"ARCHIVOS DE CONFIGURACI\u00d3N MYSQL","text":"<p>El Archivo de configuraci\u00f3n del servidor de MySQL implementado en APS TKONTROL est\u00e1 detallado a continuaci\u00f3n.</p> <p>Directorio de archivo de configuraci\u00f3n de MySQL</p> <pre><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf\n</code></pre>"},{"location":"archivos_configuracion/#servidor-1_1","title":"Servidor #1","text":"<pre><code>#\n# The MySQL database server configuration file.\n#\n# You can copy this to one of:\n# - \"/etc/mysql/my.cnf\" to set global options,\n# - \"~/.my.cnf\" to set user-specific options.\n# \n# One can use all long options that the program supports.\n# Run program with --help to get a list of available options and with\n# --print-defaults to see which it would actually understand and use.\n#\n# For explanations see\n# http://dev.mysql.com/doc/mysql/en/server-system-variables.html\n\n# This will be passed to all mysql clients\n# It has been reported that passwords should be enclosed with ticks/quotes\n# escpecially if they contain \"#\" chars...\n# Remember to edit /etc/mysql/debian.cnf when changing the socket location.\n\n# Here is entries for some specific programs\n# The following values assume you have at least 32M ram\n\n[mysqld_safe]\nsocket      = /var/run/mysqld/mysqld.sock\nnice        = 0\n\n[mysqld]\n#\n# * Basic Settings\n#\nuser        = mysql\npid-file    = /var/run/mysqld/mysqld.pid\nsocket      = /var/run/mysqld/mysqld.sock\nport        = 3306\nbasedir     = /usr\ndatadir     = /var/lib/mysql\ntmpdir      = /tmp\nlc-messages-dir = /usr/share/mysql\n#skip-external-locking\n#\n# Instead of skip-networking the default is now to listen only on\n# localhost which is more compatible and is not less secure.\nbind-address        = 0.0.0.0\n#\n# * Fine Tuning\n#\nkey_buffer_size     = 16M\nmax_allowed_packet  = 16M\nthread_stack        = 192K\nthread_cache_size       = 8\n# This replaces the startup script and checks MyISAM tables if needed\n# the first time they are touched\nmyisam-recover-options  = BACKUP\n#max_connections        = 100\n#table_open_cache       = 64\n#thread_concurrency     = 10\n#\n# * Query Cache Configuration\n#\nquery_cache_limit   = 1M\nquery_cache_size        = 16M\n#\n# * Logging and Replication\n#\n# Both location gets rotated by the cronjob.\n# Be aware that this log type is a performance killer.\n# As of 5.1 you can enable the log at runtime!\n#general_log_file        = /var/log/mysql/mysql.log\n#general_log             = 1\n#\n# Error log - should be very few entries.\n#\nlog_error = /var/log/mysql/error.log\n#\n# Here you can see queries with especially long duration\n#slow_query_log     = 1\n#slow_query_log_file    = /var/log/mysql/mysql-slow.log\n#long_query_time = 2\n#log-queries-not-using-indexes\n#\n# The following can be used as easy to replay backup logs or for replication.\n# note: if you are setting up a replication slave, see README.Debian about\n#       other settings you may need to change.\n#server-id      = 1\n#log_bin            = /var/log/mysql/mysql-bin.log\nexpire_logs_days    = 10\nmax_binlog_size   = 100M\n#binlog_do_db       = include_database_name\n#binlog_ignore_db   = include_database_name\n#\n# * InnoDB\n#\n# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.\n# Read the manual for more InnoDB related options. There are many!\n#\n# * Security Features\n#\n# Read the manual, too, if you want chroot!\n# chroot = /var/lib/mysql/\n#\n# For generating SSL certificates I recommend the OpenSSL GUI \"tinyca\".\n#\n# ssl-ca=/etc/mysql/cacert.pem\n# ssl-cert=/etc/mysql/server-cert.pem\n# ssl-key=/etc/mysql/server-key.pem\n</code></pre>"},{"location":"archivos_configuracion/#servidor-2_1","title":"Servidor #2","text":"<pre><code>#\n# The MySQL database server configuration file.\n#\n# One can use all long options that the program supports.\n# Run program with --help to get a list of available options and with\n# --print-defaults to see which it would actually understand and use.\n#\n# For explanations see\n# http://dev.mysql.com/doc/mysql/en/server-system-variables.html\n\n# Here is entries for some specific programs\n# The following values assume you have at least 32M ram\n\n[mysqld]\n#\n# * Basic Settings\n#\nuser        = mysql\n# pid-file  = /var/run/mysqld/mysqld.pid\n# socket    = /var/run/mysqld/mysqld.sock\n# port      = 3306\n# datadir   = /var/lib/mysql\n\n\n# If MySQL is running as a replication slave, this should be\n# changed. Ref https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmpdir\n# tmpdir        = /tmp\n#\n# Instead of skip-networking the default is now to listen only on\n# localhost which is more compatible and is not less secure.\nbind-address        = 0.0.0.0\n#\n# * Fine Tuning\n#\nkey_buffer_size     = 16M\n# max_allowed_packet    = 64M\n# thread_stack      = 256K\n\n# thread_cache_size       = -1\n\n# This replaces the startup script and checks MyISAM tables if needed\n# the first time they are touched\nmyisam-recover-options  = BACKUP\n\n# max_connections        = 151\n\n# table_open_cache       = 4000\n\n#\n# * Logging and Replication\n#\n# Both location gets rotated by the cronjob.\n#\n# Log all queries\n# Be aware that this log type is a performance killer.\n# general_log_file        = /var/log/mysql/query.log\n# general_log             = 1\n#\n# Error log - should be very few entries.\n#\nlog_error = /var/log/mysql/error.log\n#\n# Here you can see queries with especially long duration\n# slow_query_log        = 1\n# slow_query_log_file   = /var/log/mysql/mysql-slow.log\n# long_query_time = 2\n# log-queries-not-using-indexes\n#\n# The following can be used as easy to replay backup logs or for replication.\n# note: if you are setting up a replication slave, see README.Debian about\n#       other settings you may need to change.\n# server-id     = 1\n# log_bin           = /var/log/mysql/mysql-bin.log\n# binlog_expire_logs_seconds    = 2592000\nmax_binlog_size   = 100M\n# binlog_do_db      = include_database_name\n# binlog_ignore_db  = include_database_name\n</code></pre>"},{"location":"archivos_configuracion/#archivo-de-configuracion-vsftpd","title":"ARCHIVO DE CONFIGURACI\u00d3N VSFTPD","text":"<p>Directorio de archivo de configuraci\u00f3n de vsftpd <pre><code>sudo nano /etc/vsftpd.conf\n</code></pre></p>"},{"location":"archivos_configuracion/#servidor-1-y-2","title":"Servidor 1 y 2","text":"<pre><code># Example config file /etc/vsftpd.conf\n#\n# The default compiled in settings are fairly paranoid. This sample file\n# loosens things up a bit, to make the ftp daemon more usable.\n# Please see vsftpd.conf.5 for all compiled in defaults.\n#\n# READ THIS: This example file is NOT an exhaustive list of vsftpd options.\n# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's\n# capabilities.\n#\n#\n# Run standalone?  vsftpd can run either from an inetd or as a standalone\n# daemon started from an initscript.\nlisten=NO\n#\n# This directive enables listening on IPv6 sockets. By default, listening\n# on the IPv6 \"any\" address (::) will accept connections from both IPv6\n# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6\n# sockets. If you want that (perhaps because you want to listen on specific\n# addresses) then you must run two copies of vsftpd with two configuration\n# files.\nlisten_ipv6=YES\n#\n# Allow anonymous FTP? (Disabled by default).\nanonymous_enable=NO\n#\n# Uncomment this to allow local users to log in.\nlocal_enable=YES\n#\n# Uncomment this to enable any form of FTP write command.\nwrite_enable=YES\n#\n# Default umask for local users is 077. You may wish to change this to 022,\n# if your users expect that (022 is used by most other ftpd's)\nlocal_umask=022\n#\n# Uncomment this to allow the anonymous FTP user to upload files. This only\n# has an effect if the above global write enable is activated. Also, you will\n# obviously need to create a directory writable by the FTP user.\n#anon_upload_enable=YES\n#\n# Uncomment this if you want the anonymous FTP user to be able to create\n# new directories.\n#anon_mkdir_write_enable=YES\n#\n# Activate directory messages - messages given to remote users when they\n# go into a certain directory.\ndirmessage_enable=YES\n#\n# If enabled, vsftpd will display directory listings with the time\n# in  your  local  time  zone.  The default is to display GMT. The\n# times returned by the MDTM FTP command are also affected by this\n# option.\nuse_localtime=YES\n#\n# Activate logging of uploads/downloads.\nxferlog_enable=YES\n#\n# Make sure PORT transfer connections originate from port 20 (ftp-data).\nconnect_from_port_20=YES\n#\n# If you want, you can arrange for uploaded anonymous files to be owned by\n# a different user. Note! Using \"root\" for uploaded files is not\n# recommended!\n#chown_uploads=YES\n#chown_username=whoever\n#\n# You may override where the log file goes if you like. The default is shown\n# below.\nxferlog_file=/var/log/vsftpd.log\n#\n# If you want, you can have your log file in standard ftpd xferlog format.\n# Note that the default log file location is /var/log/xferlog in this case.\nxferlog_std_format=YES\n#\n# You may change the default value for timing out an idle session.\nidle_session_timeout=100\n#\n# You may change the default value for timing out a data connection.\ndata_connection_timeout=100\n#Especifica el m\u00e1ximo n\u00famero de clientes que tienen permitido conectarse desde la misma direcci\u00f3n IP fuente.\n#El valor predeterminado es 0, lo que no limita las conexiones.\nmax_per_ip=3\n# It is recommended that you define on your system a unique user which the\n# ftp server can use as a totally isolated and unprivileged user.\n#nopriv_user=ftpsecure\n#\n# Enable this and the server will recognise asynchronous ABOR requests. Not\n# recommended for security (the code is non-trivial). Not enabling it,\n# however, may confuse older FTP clients.\n#async_abor_enable=YES\n#\n# By default the server will pretend to allow ASCII mode but in fact ignore\n# the request. Turn on the below options to have the server actually do ASCII\n# mangling on files when in ASCII mode.\n# Beware that on some FTP servers, ASCII support allows a denial of service\n# attack (DoS) via the command \"SIZE /big/file\" in ASCII mode. vsftpd\n# predicted this attack and has always been safe, reporting the size of the\n# raw file.\n# ASCII mangling is a horrible feature of the protocol.\nascii_upload_enable=YES\n#ascii_download_enable=YES\n#\n# You may fully customise the login banner string:\nftpd_banner=Welcome to OPS TKONTROL FTP service.\n#\n# You may specify a file of disallowed anonymous e-mail addresses. Apparently\n# useful for combatting certain DoS attacks.\n#deny_email_enable=YES\n# (default follows)\n#banned_email_file=/etc/vsftpd.banned_emails\n#\n# You may restrict local users to their home directories.  See the FAQ for\n# the possible risks in this before using chroot_local_user or\n# chroot_list_enable below.\nchroot_local_user=YES\n#\n# You may specify an explicit list of local users to chroot() to their home\n# directory. If chroot_local_user is YES, then this list becomes a list of\n# users to NOT chroot().\n# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that\n# the user does not have write access to the top level directory within the\n# chroot)\n#chroot_local_user=YES\n#chroot_list_enable=YES\n# (default follows)\n#chroot_list_file=/etc/vsftpd.chroot_list\n#\n# You may activate the \"-R\" option to the builtin ls. This is disabled by\n# default to avoid remote users being able to cause excessive I/O on large\n# sites. However, some broken FTP clients such as \"ncftp\" and \"mirror\" assume\n# the presence of the \"-R\" option, so there is a strong case for enabling it.\n#ls_recurse_enable=YES\n#\n# Customization\n#\n# Some of vsftpd's settings don't fit the filesystem layout by\n# default.\n#\n# This option should be the name of a directory which is empty.  Also, the\n# directory should not be writable by the ftp user. This directory is used\n# as a secure chroot() jail at times vsftpd does not require filesystem\n# access.\nsecure_chroot_dir=/var/run/vsftpd/empty\n#\n# This string is the name of the PAM service vsftpd will use.\npam_service_name=vsftpd\n#\n# This option specifies the location of the RSA certificate to use for SSL\n# encrypted connections.\nrsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\nrsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nssl_enable=NO\n\n#\n# Uncomment this to indicate that vsftpd use a utf8 filesystem.\n#utf8_filesystem=YES\nuserlist_enable=YES\ntcp_wrappers=YES\nallow_writeable_chroot=YES\nuserlist_file=/etc/vsftpd.userlist\nuserlist_deny=NO\npasv_enable=YES\npasv_min_port=40000\npasv_max_port=50000\nseccomp_sandbox=NO\n</code></pre>"},{"location":"arquitectura/","title":"Modelo de dise\u00f1o de software","text":"<p>El modelo de dise\u00f1o de software implementado en la soluci\u00f3n de APS tkontrol es la Arquitectura cliente-servidor, en la que las tareas se reparte entre dos recrusos, el siguiente diagrama muestra la arquitectura implementada.</p> <p></p> <ul> <li> <p>Cliente: Se ejecuta el proyecto de Angular donde los cliente ven la aplicaci\u00f3n APS Tkontrol y se conectan por v\u00eda HTTP, adem\u00e1s otro tipo de cliente que se conecta son los equipos GPS de DCT que se conectan al servidor por medio del protocolo TCP</p> </li> <li> <p>Servivor: Se ejecuta el proyecto Node.js y en conjunto el servidor web nginx que procesa las solicitudes hecha por los cliente, como conexion, peticiones http y tcp, adem\u00e1s se ejecuta otros servidores como VSFTPD y servidores de base de datos. </p> </li> </ul>"},{"location":"arquitectura/#diagrama-de-red-generico","title":"Diagrama de red gen\u00e9rico","text":"<p>El diagrama de red gen\u00e9rico mostrado a continuaci\u00f3n muestra la arquitectura de red implementado en APS, adem\u00e1s muestra el formato est\u00e1ndar que se ocupa para el modelo de recursos http en formato JSON para solicitudes API REST</p> <p></p>"},{"location":"arquitectura/#ejemplo-de-uso","title":"Ejemplo de uso","text":""},{"location":"arquitectura/#metodo-get","title":"M\u00e9todo GET","text":"<ul> <li>Formato</li> </ul> Descripci\u00f3n Valores M\u00e9todo <code>GET</code> Par\u00e1metros <code>Ninguno</code> Cuerpo <code>x-www-form-urlencoded</code> <ul> <li>Par\u00e1metros de Encabezados (Headers)</li> </ul> Variable Valor <code>access-token</code> String <code>content-type</code> application/json \u00f3  application/xml <ul> <li> <p>URL servidor 1</p> <p>https://aps.tkontrol.com/punto-de-entrada1</p> </li> <li> <p>URL servidor 2</p> <p>https://srv2.tkontrol.com/punto-de-entrada1</p> </li> <li> <p>Los posibles resultados que responde el servidor al consumir la API son la siguiente:</p> </li> </ul> Estado Descripci\u00f3n <code>200</code> La solicitud ha tenido un exito <code>404</code> El Servidor no ha encontrado el servicio solicitado <code>403</code> El cliente no tiene los permisos nesesario para tal acci\u00f3n <code>xxx</code> si retorna otro c\u00f3digo consulte: HTTP status"},{"location":"arquitectura/#metodo-post","title":"M\u00e9todo POST","text":"<ul> <li>Formato</li> </ul> Descripci\u00f3n Valores M\u00e9todo <code>POST</code> Par\u00e1metros <code>JSON</code> Cuerpo <code>x-www-form-urlencoded</code> <ul> <li>Par\u00e1metros de Encabezados (Headers)</li> </ul> Variable Valor <code>access-token</code> String <code>content-type</code> application/json \u00f3  application/xml <ul> <li>Formato de parametros</li> </ul> <pre><code>const parametros = {\n    var1: 'cadena', // formato para string\n    var2: true, // formato para boolean\n    var3: 10, // formato para int\n    var4: 10.0, // formato para float\n    var5: obj, // formato para objetos\n    var6: [0,1,2,3,...], // formato para arreglos\n}\n</code></pre> <ul> <li> <p>URL servidor 1</p> <p>https://aps.tkontrol.com/punto-de-entrada1</p> </li> <li> <p>URL servidor 2</p> <p>https://srv2.tkontrol.com/punto-de-entrada1</p> </li> <li> <p>Los posibles resultados que responde el servidor al consumir la API son la siguiente:</p> </li> </ul> Estado Descripci\u00f3n <code>200</code> La solicitud ha tenido un exito <code>404</code> El Servidor no ha encontrado el servicio solicitado <code>403</code> El cliente no tiene los permisos nesesario para tal acci\u00f3n <code>xxx</code> si retorna otro c\u00f3digo consulte: HTTP status"},{"location":"arquitectura/#patron-de-diseno-servidor","title":"Patr\u00f3n de dise\u00f1o Servidor","text":""},{"location":"arquitectura/#singleton","title":"Singlet\u00f3n","text":"<p>El back-end est\u00e1 desarrollado en Node.js y est\u00e1 implementado con el patr\u00f3n de dise\u00f1o singlet\u00f3n, cual su funcion principal es tener una sola instancia en toda la aplicaci\u00f3n, esto est\u00e1 pensado exclusivamente para tener una sola referencia de las conexiones TCP de parte de los dispostivos GPS que se conectan a la plataforma y tener un acceso rapido a las referencia de dichas conexiones</p> <p>Diagrama de flujo del servidor</p> <p></p>"},{"location":"arquitectura/#marco-de-trabajo-de-aplicacion-angular","title":"Marco de trabajo de aplicaci\u00f3n Angular","text":""},{"location":"arquitectura/#mvvm","title":"MVVM","text":"<p>Esquema general de la arquitectura MVVM (Model-View-ViewModel) utilizado en la aplicaci\u00f3n front-end de Angular, el cual nos ayuda a separar la logica del negocio de la interfaz de usuario, facilitando pruebas, mantenimiento y escalabilidad</p> <p>Car\u00e1cteristica de cada capa</p> <ul> <li> <p>MODEL: Un modelo representa un objeto real del dominio de la l\u00f3gica de negocio del sistema. Por ejemplo: una factura o un usuario. Es el responsable de exponer los datos de una manera que WPF pueda consumir f\u00e1cilmente.</p> </li> <li> <p>VIEW: una vista se define en XAML (lenguaje de marcado de WPF), y no debe tener ninguna l\u00f3gica en el c\u00f3digo subyacente. Se une al ViewModel solo mediante el enlace de datos (binding).</p> </li> <li> <p>VIEWMODEL: es un modelo para las vistas de la aplicaci\u00f3n, es decir, se trata de una abstracci\u00f3n de los datos de las vistas. Conecta \u00fanicamente los datos que requieren las vistas y realiza la l\u00f3gica necesaria para la preparaci\u00f3n de dichos datos. Adem\u00e1s de exponer los datos relevantes para la vista, tambi\u00e9n expone los comportamientos de las vistas, generalmente con comandos.</p> </li> </ul> <p></p>"},{"location":"arquitectura/#interpolacion-en-angular","title":"Interpolaci\u00f3n en Angular","text":"<p>La interpolaci\u00f3n en la aplicaci\u00f3n en Angular sirve para conectar los datos del modelo en la vista HTML, el siguiente esquema se muestra las interpolaciones que e utiliza en el desarrollo de la aplicaci\u00f3n para mostrar los datos en la plataforma.</p> <p></p> <p>El Sentido de las direcciones de las flechas indican haciando donde va dirigido el comportamiento o el env\u00edo de datos del componente al DOM, solo una interpolaci\u00f3n es bidireccional lo que significa que desde la vista se puede enviar datos al componentes y viceversa</p>"},{"location":"comandos/","title":"Comandos","text":""},{"location":"comandos/#comandos-de-firewall-ufw","title":"Comandos de firewall UFW","text":""},{"location":"comandos/#estado","title":"Estado","text":"<ul> <li> ver el estado del firewall <pre><code>sudo ufw status\n</code></pre></li> </ul>"},{"location":"comandos/#habilitar","title":"Habilitar","text":"<ul> <li> Habiliar el firewall de ufw <pre><code>sudo ufw disable\n</code></pre></li> </ul>"},{"location":"comandos/#desabilitar","title":"Desabilitar","text":"<ul> <li> desabilitar el firewall de ufw <pre><code>sudo ufw enable\n</code></pre></li> </ul>"},{"location":"comandos/#habilitar-puertos","title":"Habilitar puertos","text":"<ul> <li> Habilitar conexion SSH <pre><code>sudo ufw allow 22\n</code></pre></li> <li> Habilitar intervalo de conexiones <pre><code>sudo ufw allow 6000:6007/tcp\n</code></pre></li> <li> Habilitar conexiones para IP espec\u00edficas <pre><code>sudo ufw allow from 203.0.113.4\n</code></pre></li> <li> Habilitar conexiones para IP espec\u00edficas y puerto especifico <pre><code>sudo ufw allow from 203.0.113.4 to any port 22\n</code></pre></li> <li> Habilitar conexiones para IP espec\u00edficas y puerto especifico <pre><code>sudo ufw allow from 203.0.113.4 to any port 22\n</code></pre></li> </ul>"},{"location":"comandos/#denegar-puertos","title":"Denegar puertos","text":"<ul> <li> Denegar conexiones en el puerto http <pre><code>sudo ufw deny http\n</code></pre></li> <li> Denegar conexiones en el puerto 22 <pre><code>sudo ufw deny 22\n</code></pre></li> </ul>"},{"location":"comandos/#eliminar-puertos","title":"Eliminar puertos","text":"<ul> <li> Eliminar reglas por el numero de puerto <pre><code>sudo ufw delete allow 80\n</code></pre></li> </ul>"},{"location":"comandos/#comandos-de-mysql","title":"Comandos de MySql","text":""},{"location":"comandos/#estado_1","title":"Estado","text":"<ul> <li> Ver el status que tiene el servidor, como el tiempo de encendido o de su ultimo reinicio <pre><code>sudo systemctl status mysql\n</code></pre></li> </ul>"},{"location":"comandos/#encender","title":"Encender","text":"<ul> <li> Reiniciar servidor de MySQL <pre><code>sudo service mysql start\n</code></pre></li> </ul>"},{"location":"comandos/#reiniciar","title":"Reiniciar","text":"<ul> <li> Reiniciar servidor de MySQL <pre><code>sudo service mysql restart\n</code></pre></li> </ul>"},{"location":"comandos/#apagar","title":"Apagar","text":"<ul> <li> Apagar servidor de MySQL (si se ejecuta este comando no se podr\u00e1 acceder a la base de datos por nig\u00fan medio) <pre><code>sudo service mysql stop\n</code></pre></li> </ul>"},{"location":"comandos/#iniciar-sesion","title":"Iniciar sesi\u00f3n","text":"<ul> <li> <p> Iniciar sesi\u00f3n desde la consola de ubuntu 18.04/20.04</p> <p>Formato</p> <p>mysql -u (usuario) -p </p> <p>Ejemplo con usuario <code>root</code> <pre><code>mysql -u root -p \n</code></pre></p> </li> </ul>"},{"location":"comandos/#comandos-mysql","title":"Comandos MySQL","text":"<p>La siguiente lista se ejecuta en la consola del servidor de base de datos</p> <ul> <li> Diferentes tipos de comandos para verificar las conexiones abierta dentro del servidor de base de datos  <pre><code>show processlist;\n</code></pre> <pre><code>show status like 'Threads%';\n</code></pre> <pre><code>show status where variable_name like 'Threads_%' or variable_name = 'Connections';\n</code></pre> <pre><code>show session status;\n</code></pre></li> <li> Cambiar las conexiones m\u00e1ximas concurrentes en el servidor de base de datos de MySQL <pre><code>show VARIABLES like SET GLOBAL max_connections=250 'max_connections';\n</code></pre></li> <li> El comando utiliza tablas de cach\u00e9 de host, si se ha alcanzado el n\u00famero m\u00e1ximo de conexiones para un host en particular, el servidor mysql no podr\u00e1 realizar nuevas conexiones. vaciar las tablas de host restablece el proceso y nuevamente permite las conexiones para HOST en particular. <pre><code>FLUSH HOSTS\n</code></pre></li> </ul>"},{"location":"comandos/#ver-modulos-desactualizados-en-angular","title":"Ver m\u00f3dulos desactualizados en Angular","text":"<ul> <li> comando NPM <pre><code>npm outdated\n</code></pre></li> </ul>"},{"location":"comandos/#comandos-de-servidor-ubuntu","title":"Comandos de servidor Ubuntu","text":""},{"location":"comandos/#matar-o-terminar-procesos","title":"Matar o terminar procesos","text":"<ul> <li> <p> Comando para matar un proceso no deseado en el servidor ubuntu.</p> <pre><code>kill -TERM PID\n</code></pre> <pre><code>kill -9 PID\n</code></pre> donde: PID: es el numero pid asociado al proceso. Ejemplo 5040 </li> </ul>"},{"location":"comandos/#comandos-de-registros","title":"Comandos de registros","text":"<ul> <li> <p> Salir de un editor de la terminal</p> <p>Crtl + c</p> </li> <li> <p> Ver los \u00faltimos 50 registros de logueo exitoso hacia el servidor <pre><code>last -aiFn 50\n</code></pre></p> </li> <li> Ver los \u00faltimos 50 registros de logueo fallidos hacia el servidor <pre><code>lastb -ia -50\n</code></pre></li> <li> Ver los \u00faltimos 50 registros de autenticaci\u00f3n hacia el sistema <pre><code>tail -50 /var/log/auth.log\n</code></pre></li> <li> Ver estados de ejecuci\u00f3n de CRONJOB en el servidor <pre><code>sudo status cron\n</code></pre> <pre><code>ps aux|grep cron\n</code></pre></li> <li> Ver mensajes de Kernel del sistema operativo <pre><code>tail -f /var/log/kern.log\n</code></pre></li> <li> Ver IP conectadas al servidor VPS <pre><code>sudo netstat -tupn\n</code></pre></li> </ul>"},{"location":"comandos/#comandos-de-monitoreos","title":"comandos de monitoreos","text":"<ul> <li> sistema de monitorizaci\u00f3n, administraci\u00f3n y visor de procesos interactivo de servidor Ubuntu <pre><code>htop\n</code></pre> <pre><code>glances\n</code></pre> <pre><code>atop\n</code></pre></li> </ul>"},{"location":"comandos/#comandos-de-accion","title":"Comandos de acci\u00f3n","text":"<ul> <li> <p> Mover contenido de un directorio a otro <pre><code>rsync -a directotioA/ directorioB/\n</code></pre></p> </li> <li> <p> Eliminar un directorio de contenido <pre><code>sudo rm -r nombreDirectorio\n</code></pre></p> </li> </ul>"},{"location":"comandos/#administrador-de-procesos-para-nodejs-pm2","title":"Administrador de procesos para NodeJS (PM2)","text":""},{"location":"comandos/#encender-servidor","title":"Encender servidor","text":"<ul> <li> Encender servidor por primera vez <pre><code>mp2 start index.js\n</code></pre></li> </ul> <p>Nota</p> <p>se debe de buscar la ruta absoluta del servidor y buscar el archivo <code>index.js</code>. Ejemplo /root/server2/dist/index.js</p> <p>Atenci\u00f3n</p> <p>Una vez iniciado el servidor, se le asigna un id con el cual se puede gestionar. Por ejemplo 0,1,2,...</p>"},{"location":"comandos/#ver-estado-del-servidor","title":"Ver estado del servidor","text":"<ul> <li> <p> Ver estado de servidor Nodejs. <pre><code>mp2 status\n</code></pre> El resultado debe ser similar a la siguiente imagen. </p> </li> <li> <p> Ver errores del administrador <pre><code>pm2 --err\n</code></pre></p> </li> </ul>"},{"location":"comandos/#monitorear-procesos","title":"Monitorear procesos","text":"<ul> <li> Monitorear en tiempo real la ejecuci\u00f3n del servidor nodejs encendido en ese momento <pre><code>pm2 monit ID\n</code></pre></li> <li> donde ID: es el n\u00famro asignado al momento de encender un proceso nodejs (ver imagen del punto anterior). Ejemplo 0 </li> <li> <p> Monitorear en tiempo real la ejecuci\u00f3n del servidor nodejs encendido en ese momento <pre><code>pm2 logs\n</code></pre></p> </li> </ul>"},{"location":"comandos/#detener-un-proceso","title":"Detener un proceso","text":"<ul> <li> Detener un proceso o servidor Nodejs. <pre><code>pm2 stop ID\n</code></pre></li> <li> donde ID: es el n\u00famro asignado al momento de encender un proceso nodejs (ver imagen del punto anterior). Ejemplo 0 </li> </ul>"},{"location":"comandos/#eliminar-un-proceso","title":"Eliminar un proceso","text":"<ul> <li> Eliminar un proceso o servidor Nodejs. <pre><code>pm2 delete ID\n</code></pre></li> <li> donde ID: es el n\u00famro asignado al momento de encender un proceso nodejs (ver imagen del punto anterior). Ejemplo 0 </li> </ul>"},{"location":"comandos/#comandos-de-ayuda","title":"Comandos de ayuda","text":"<ul> <li> Ver lista completa de opciones para gestionar pm2 <pre><code>pm2 -h\n</code></pre></li> </ul>"},{"location":"comandos/#comandos-de-servidor-ftp-vsftpd","title":"Comandos de servidor FTP (VSFTPD)","text":""},{"location":"comandos/#ver-usuarios-conectados","title":"Ver usuarios conectados","text":"<ul> <li> Ver informaci\u00f3n de todos los usuarios conectados en el servidor FTP  <pre><code>ps -ef|grep ftpd\n</code></pre></li> </ul>"},{"location":"comandos/#comandos-de-servidor-web-nginx","title":"Comandos de servidor web (nginx)","text":"<ul> <li> <p> Ver registro de acceso al servidor web <pre><code>tail -f /var/log/nginx/access.log\n</code></pre></p> </li> <li> <p> Ver registro de error en el servidor <pre><code>tail -f /var/log/nginx/error.log\n</code></pre></p> </li> </ul>"},{"location":"instalaciones/","title":"Instalaciones de programas","text":""},{"location":"instalaciones/#configurar-firewall-ufw","title":"CONFIGURAR FIREWALL UFW","text":""},{"location":"instalaciones/#requisitos-previos","title":"Requisitos previos","text":"<p>Para este programa se nesesitar\u00e1 lo siguiente:</p> <ul> <li>Un servidor de Ubuntu 18.04/20.04 con un non-root user sudo, que se puede configurar con el siguiente tutorial: Configuracion inicial para servidores Ubuntu 18.4/20.04</li> </ul>"},{"location":"instalaciones/#paso-1-instalar-firewall","title":"Paso 1: Instalar firewall","text":"<p>UFW ya viene instalado en el sistema operativo de ubuntu, si se desinstalo por alguna raz\u00f3n, se puede volver a instalar ejecutando el siguiente comando</p> <pre><code>sudo apt install ufw2\n</code></pre>"},{"location":"instalaciones/#paso-2-utilizar-ipv6-con-ufw-opcional","title":"Paso 2: Utilizar IPv6 con UFW (opcional)","text":"<p>Si se desea, se puede activar IPv6; compruebe que que IPv6 este habilitado de modo que pueda administrar las reglas, para ello vamos a ocupar el editor <code>nano</code> o su editor favorito, ejecutamos el siguiente comando.</p> <pre><code>sudo nano /etc/default/ufw\n</code></pre> <p>A continuaci\u00f3n, aseg\u00farese de que el valor de <code>IPV6</code> sea <code>yes</code>. La Salida deber\u00eda tener el siguiente aspecto:</p> <pre><code>IPV6=yes\n</code></pre> <p>Guarde <code>(Ctrl+s)</code> y cierre el archivo <code>(Ctrl+z)</code>. Cuando UFW est\u00e9 habilitado, se configurar\u00e1 para escribir reglas de firewall de IPv4 y IPv6. Sin embargo, antes de habilitar UFW, nos convendr\u00e1 comprobar que su firewall est\u00e9 configurado para que pueda conectarse a trav\u00e9s de SSH. Empezaremos con la configuraci\u00f3n de las pol\u00edticas predeterminadas.</p>"},{"location":"instalaciones/#paso-3-configurar-politicas-predeterminadas","title":"Paso 3: Configurar pol\u00edticas predeterminadas","text":"<p>Estas reglas controlan la administraci\u00f3n del tr\u00e1fico que no coincida de forma expl\u00edcita con otras reglas. Por defecto, UFW est\u00e1 configurado para denegar todas las conexiones entrantes y permitir todas las conexiones salientes. Esto significa que quien intente llegar a su servidor no podr\u00e1 conectarse, mientras que cualquier aplicaci\u00f3n dentro del servidor podr\u00eda llegar al mundo exterior.</p> <p>podemos restablecer los valores predeterminado de las reglas de UFW, ejecutando los siguentes comando</p> <pre><code>sudo ufw default deny incoming\n</code></pre> <pre><code>sudo ufw default allow outgoing\n</code></pre> <p>Atenci\u00f3n</p> <p>Establecen los valores predeterminados para denegar las conexiones entrantes y permitir las salientes. Con solo estos valores predeterminados de firewall podr\u00eda bastar para una computadora personal, pero normalmente los servidores deben responder a las solicitudes de usuarios externos</p>"},{"location":"instalaciones/#paso-4-habilitar-conexiones-ssh","title":"Paso 4: Habilitar conexiones SSH","text":"<p>Si habilitamos nuestro firewall de UFW ahora, denegar\u00eda todas las conexiones entrantes. Esto significa que deberemos crear reglas que permitan expl\u00edcitamente las conexiones entrantes leg\u00edtimas (SSH o HTTP, por ejemplo) si queremos que nuestro servidor responda a estos tipos de solicitudes. Si utiliza un servidor en nube, probablemente le convenga permitir las conexiones SSH entrantes para poder conectarse y administrar su servidor.</p> <p>Para configurar el servidor de modo que permita conexiones entrante, se debe de ejecutar el siguiente comando.</p> <pre><code>sudo ufw allow ssh\n</code></pre> <p>Esto crear\u00e1 reglas de firewall que permitir\u00e1n todas las conexiones en el puerto <code>22</code>, que es el que escucha el demonio SSH por defecto. UFW registra el significado del puerto <code>allow</code> ssh porque est\u00e1 enumerado como servicio en el archivo <code>/etc/services.</code></p> <p>Ahora que su firewall est\u00e1 configurado para permitir las conexiones SSH entrantes, podemos habilitarlo.</p>"},{"location":"instalaciones/#paso-5-habilitar-ufw","title":"Paso 5: Habilitar UFW","text":"<p>Vamos habilitar UFW, para hacer esto vamos a ejecutar el siguiente comando: </p> <pre><code>sudo ufw enable\n</code></pre> <p>Atenci\u00f3n</p> <p>Recibir\u00e1 una advertencia que indicar\u00e1 que el comando puede interrumpir las conexiones SSH existentes. Ya configuramos una regla de firewall que permite conexiones SSH. Deber\u00eda ser posible continuar sin inconvenientes. Responda a la solicitud con <code>y</code> y presione <code>ENTER</code>.</p> <p>Con esto, el firewall quedar\u00e1 activo. Ejecute el comando:</p> <p><pre><code>sudo ufw status verbose \n</code></pre> Para ver las reglas que se configuran. En el resto de esta documentaci\u00f3n se abarca en mayor profundidad la forma de utilizar UFW. Se analizar\u00e1n opciones como las de permitir o denegar diferentes tipos de conexiones.</p>"},{"location":"instalaciones/#paso-6-habilitar-otras-conexiones","title":"Paso 6: Habilitar otras conexiones","text":""},{"location":"instalaciones/#puertos-importantes","title":"Puertos importantes","text":"<p>en UFW se pueden habilitar otros puertos para establecer conexi\u00f3n, vamos habilitar el puerto <code>80</code> que es donde se conectan las aplicaciones web y en fundamental tenerlo habilitado</p> <ul> <li> HTTP en el puerto 80, que es lo que utilizan los servidores web no cifrados, ejecute el siguiente comando: <pre><code>sudo ufw allow 80\n</code></pre></li> <li> HTTPS en el puerto 443, que es lo que utilizan los servidores web cifrados, ejeute el siguiente comando: <pre><code>sudo ufw allow 443\n</code></pre></li> </ul>"},{"location":"instalaciones/#intervalos-de-puerto-especificos","title":"Intervalos de puerto espec\u00edficos","text":"<p>Puede especificar intervalos de puerto con UFW. Algunas aplicaciones utilizan varios puertos en vez de uno solo. Ejemplo de uso de habilitaci\u00f3n de puertos por intervalo es como se muestra en el siguiente comando.</p> <pre><code>sudo ufw allow 6000:6007/tcp\n</code></pre> <p>Cuando se especifiquen intervalos de puerto con UFW, debe especificar el protocolo (tcp o udp) a los que deber\u00edan aplicarse las reglas. No lo mencionamos antes porque cuando no se especifica el protocolo se permiten ambos de forma autom\u00e1tica, lo cual est\u00e1 bien en la mayor\u00eda de los casos.</p>"},{"location":"instalaciones/#direcciones-ip-especificas","title":"Direcciones IP espec\u00edficas","text":"<p>Al trabajar con UFW, tambi\u00e9n puede especificar direcciones IP. Por ejemplo, si desea permitir las conexiones desde una direcci\u00f3n IP espec\u00edfica, como una direcci\u00f3n IP de trabajo o dom\u00e9stica 203.0.113.4, debe especificar from y luego la direcci\u00f3n IP:</p> <pre><code>sudo ufw allow from 203.0.113.4\n</code></pre> <p>Tambi\u00e9n puede especificar un puerto concreto al que la direcci\u00f3n IP pueda conectarse agregando to any port seguido del n\u00famero de este. Por ejemplo, si desea permitir que <code>203.0.113.4</code> se conecte al puerto <code>22</code> (SSH), utilice este comando:</p> <pre><code>sudo ufw allow from 203.0.113.4 to any port 22\n</code></pre>"},{"location":"instalaciones/#paso-7-denegar-conexiones","title":"Paso 7: Denegar conexiones","text":"<p>Si no ha cambiado la pol\u00edtica predeterminada para las conexiones entrantes, UFW est\u00e1 configurado para denegarlas todas. Generalmente, esto simplifica el proceso de creaci\u00f3n de una pol\u00edtica de firewall segura al exigirle crear reglas que permitan de forma expl\u00edcita el acceso de puertos espec\u00edficos y direcciones IP.</p> <p>Sin embargo, a veces le convendr\u00e1 denegar conexiones espec\u00edficas basadas en la direcci\u00f3n IP o subred de origen, quiz\u00e1s por saber que su servidor recibe ataques desde ellas. Adem\u00e1s, si desea cambiar su pol\u00edtica entrante predeterminada para allow (no lo recomendamos), deber\u00eda crear reglas deny para cualquier servicio o direcci\u00f3n IP cuyas conexiones no desee permitir.</p> <p>Para escribir reglas de <code>deny</code>, puede utilizar los comandos descritos anteriormente y sustituir <code>allow</code> por <code>deny</code>.</p> <p>Por ejemplo, para denegar conexiones HTTP, podr\u00eda utilizar este comando:</p> <pre><code>sudo ufw deny http\n</code></pre> <p>A su vez, si desea denegar todas las conexiones de 203.0.113.4 podr\u00eda utilizar este comando:</p> <pre><code>sudo ufw deny from 203.0.113.4\n</code></pre>"},{"location":"instalaciones/#paso-8-eliminar-reglas","title":"Paso 8: Eliminar reglas","text":"<p>Existen dos maneras diferentes de especificar las reglas que se eliminar\u00e1n: por n\u00famero de regla o por regla real (se asemejan a la forma en que las reglas se especifican al crearse). Comenzaremos con el m\u00e9todo de eliminaci\u00f3n por el n\u00famero de regla porque es m\u00e1s sencillo.</p>"},{"location":"instalaciones/#por-numero-de-regla","title":"Por n\u00famero de regla","text":"<p>Si utiliza el n\u00famero de regla para eliminar reglas de firewall, lo primero que le convendr\u00e1 hacer es obtener una lista de reglas de firewall. El comando \u201cUFW status\u201d tiene una opci\u00f3n para mostrar n\u00fameros junto a cada regla, como se muestra aqu\u00ed:</p> <p><pre><code>sudo ufw status numbered\n</code></pre> Salida: <pre><code>Status: active\n\n     To                         Action      From\n     --                         ------      ----\n[ 1] 22                         ALLOW IN    15.15.15.0/24\n[ 2] 80                         ALLOW IN    Anywhere\n</code></pre></p> <p>Si decidimos eliminar la regla 2, que permite las conexiones del puerto 80 (HTTP), podemos especificarlo en un comando \u201cUFW delete\u201dcomo este:</p> <p><pre><code>sudo ufw delete 2\n</code></pre> Esto mostrar\u00eda un mensaje de confirmaci\u00f3n y eliminar\u00eda la regla 2, que permite conexiones HTTP. Tenga en cuenta que si tiene IPv6 habilitado, le convendr\u00eda eliminar tambi\u00e9n la regla IPv6 correspondiente.</p>"},{"location":"instalaciones/#por-regla-real","title":"Por regla real","text":"<p>La alternativa a n\u00fameros de regla es especificar la regla real que se eliminar\u00e1. Por ejemplo, si desea eliminar la regla <code>allow http</code>, podr\u00eda escribir lo siguiente:</p> <pre><code>sudo ufw delete allow http\n</code></pre> <p>Tambi\u00e9n podr\u00eda especificar la regla mediante <code>allow 80</code> en vez de hacerlo por nombre de servicio:</p> <pre><code>sudo ufw delete allow 80\n</code></pre> <p>Este m\u00e9todo eliminar\u00e1 las reglas IPv4 y IPv6, si existen.</p>"},{"location":"instalaciones/#paso-9-comprobar-el-estado-y-las-reglas-de-ufw","title":"Paso 9: Comprobar el estado y las reglas de UFW","text":"<p>En cualquier momento, puede verificar el estado de UFW con este comando:</p> <p><pre><code>sudo ufw status verbose\n</code></pre> Si UFW est\u00e1 desactivado, lo cual se aplica por defecto, ver\u00e1 algo como esto:</p> <pre><code>Status: inactive\n</code></pre> <p>Si UFW esta activado deberia de ver una salida similar a la siguiente:</p> <pre><code>Status: active\nLogging: on (low)\nDefault: deny (incoming), allow (outgoing), disabled (routed)\nNew profiles: skip\n\nTo                         Action      From\n--                         ------      ----\n22/tcp                     ALLOW IN    Anywhere\n</code></pre> <p>el siguiente comando sirve para ver el estado y configuracion de UFW</p> <pre><code>sudo ufw status\n</code></pre>"},{"location":"instalaciones/#paso-10-deshabilitar-o-reiniciar-ufw-opcional","title":"Paso 10: Deshabilitar o reiniciar UFW (opcional)","text":"<p>Si decide que no desea utilizar UFW, puede desactivarlo con este comando: <pre><code>sudo ufw disable\n</code></pre> Cualquier regla que haya creado con UFW dejar\u00e1 de estar activa. Siempre puede ejecutar sudo ufw enable si necesita activarla m\u00e1s adelante.</p> <p>Si ya tiene reglas de UFW configuradas y decide que desea empezar de nuevo, puede utilizar el comando \u201creset\u201d: <pre><code>sudo ufw reset\n</code></pre></p> <p>Esto desactivar\u00e1 UFW y eliminar\u00e1 cualquier regla definida anteriormente. Tenga en cuenta que los ajustes originales de las pol\u00edticas predeterminadas no se restablecer\u00e1n si las modific\u00f3 en alg\u00fan momento. Esto deber\u00eda permitirle empezar de nuevo con UFW.</p>"},{"location":"instalaciones/#instalar-mysql","title":"INSTALAR MySQL","text":""},{"location":"instalaciones/#requisito-previos","title":"Requisito previos","text":"<p>Para la instalaci\u00f3n del servidor de MySQL se nesesitar\u00e1 lo siguiente:</p> <ul> <li>Un servidor Ubuntu 18.04/20.04 configurado siguiendo esta gu\u00eda de configuraci\u00f3n inicial para servidores ubuntu 18.04/20.04, incluyendo un usuario <code>no root</code> con privilegios de <code>sudo</code> y un <code>firewall</code>.</li> </ul>"},{"location":"instalaciones/#paso-1-instalar-myqsl","title":"Paso 1: Instalar MyQSL","text":"<p>Instalar el indice del paquete en el servidor, ejecutando el siguiente comando:</p> <pre><code>sudo apt update\n</code></pre> <p>Despues instalaremos el paquete determinado.</p> <pre><code>sudo apt install mysql-server\n</code></pre> <p>Con este comando se instalar\u00e1 el servidor MySQL</p> <p>Nota</p> <p>Con esta instalaci\u00f3n no le pedir\u00e1 que cree una contrase\u00f1a ni que realice otro cambios de configuraci\u00f3n, deje todo por defecto, posteriormente se modificar\u00e1 algunos archivos de configuraci\u00f3n.</p>"},{"location":"instalaciones/#paso-2-configurar-mysql","title":"Paso 2: Configurar MySQL","text":"<p>Ejecutaremos el siguiente comando de seguridad:</p> <pre><code>sudo mysql_secure_installation\n</code></pre> <p>Esto har\u00e1 que pase por una serie de indicaciones en las que puede hacer algunos cambios en las opciones de seguridad de su instalaci\u00f3n de MySQL. </p> <ul> <li> La primera indicaci\u00f3n le preguntar\u00e1 si quiere configurar el plugin de Validaci\u00f3n de Contrase\u00f1a, la que puede usarse para probar la solidez de su contrase\u00f1a de MySQL. </li> <li> Independientemente de lo que haya seleccionado, la siguiente indicaci\u00f3n ser\u00e1 establecer una contrase\u00f1a para el usuario root de MySQL. Ingrese y luego confirme una contrase\u00f1a segura de su elecci\u00f3n.</li> <li> Desde este punto, puede presionar <code>Y</code> y luego <code>ENTER</code> para aceptar las configuraciones predeterminadas para todas las preguntas siguientes. Esto eliminar\u00e1 algunos usuarios an\u00f3nimos y la base de datos de prueba, deshabilitar\u00e1 los inicios de sesi\u00f3n root remotos y cargar\u00e1 estas nuevas reglas para que MySQL respete los cambios que haya realizado inmediatamente.</li> </ul> <p>Para iniciar el directorio de datos de MySQL, debe usar <code>mysql_install_db</code> para versiones anteriores a 5.7.6, y <code>mysqld --initialize</code> para la versi\u00f3n5.7.6 y posteriores. Si trata de ejecutar el comando igual, se le mostrar\u00e1 el siguiente error:</p> <pre><code>mysqld: Can't create directory '/var/lib/mysql/' (Errcode: 17 - File exists)\n. . .\n2018-04-23T13:48:00.572066Z 0 [ERROR] Aborting\n</code></pre> <p>Aunque se haya establecido una contrase\u00f1a para el usuario root de MySQL, este no esta configurado para autenticarse con una contrase\u00f1a al conectarse al shell de MySQL.</p>"},{"location":"instalaciones/#paso-3-ajustar-la-autenticacion-y-privilegio-de-usuario","title":"Paso 3: Ajustar la autenticaci\u00f3n y privilegio de usuario","text":"<p>Para los sistemas Ubuntu que est\u00e9n usando MySQL 5.7 (y las versiones posteriores), el usuario root de MySQL est\u00e1 configurado, de forma predeterminada, para autenticarse usando el plugin auth_socket en vez de una contrase\u00f1a. En muchos casos, esto permite que la seguridad y usabilidad sea mayor pero tambi\u00e9n puede complicar las cosas cuando deba permitir que un programa externo (tal como phpMyAdmin) tenga acceso al usuario.</p> <p>Deber\u00e1 cambiar su m\u00e9todo de autenticaci\u00f3n de <code>auth_socket</code> a <code>mysql_native_password</code> para usar una contrase\u00f1a para conectarse a MySQL como root. Para hacerlo, abra la indicaci\u00f3n de MySQL desde su terminal:</p> <pre><code>sudo mysql\n</code></pre> <p>Posteriormente, consulte cu\u00e1l m\u00e9todo de autenticaci\u00f3n usa cada una de sus cuentas de usuario de MySQL usando el siguiente comando:</p> <pre><code>SELECT user,authentication_string,plugin,host FROM mysql.user;\n</code></pre> <p>La salida seria de la siguiente manera:</p> <pre><code>mysql&gt; SELECT user,authentication_string,plugin,host FROM mysql.user;\n\n+------------------+-------------------------------------------+-----------------------+-----------+\n| user             | authentication_string                     | plugin                | host      |\n+------------------+-------------------------------------------+-----------------------+-----------+\n| root             |                                           | auth_socket           | localhost |\n| mysql.session    | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |\n| mysql.sys        | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |\n| debian-sys-maint | *CC744277A401A7D25BE1CA89AFF17BF607F876FF | mysql_native_password | localhost |\n+------------------+-------------------------------------------+-----------------------+-----------+\n4 rows in set (0.00 sec)\n</code></pre> <p>Se puede ver que root est\u00e1 con el plugin <code>auth_socket</code></p> <p>Atenci\u00f3n</p> <p>Para configurar la cuenta root para autenticarse usando una contrase\u00f1a, ejecute el siguiente comando <code>ALTER USER</code>. Aseg\u00farese de cambiar password (contrase\u00f1a) a una contrase\u00f1a segura de su elecci\u00f3n y sepa que este comando cambiar\u00e1 la contrase\u00f1a de root que estableci\u00f3 en el Paso 2:</p> <p><pre><code>ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';\n</code></pre> Luego, ejecute FLUSH PRIVILEGES (purgar privilegios), lo que le dice al servidor que vuelva a cargar las tablas grant e implemente sus nuevos cambios:</p> <pre><code>FLUSH PRIVILEGES;\n</code></pre> <p>Volvemos a verificar la autenticaci\u00f3n del usuario root</p> <pre><code>SELECT user,authentication_string,plugin,host FROM mysql.user;\n</code></pre> <p>Su salida debe de ser como se muestra a continuaci\u00f3n</p> <pre><code>mysql&gt; SELECT user,authentication_string,plugin,host FROM mysql.user;\n\n+------------------+-------------------------------------------+-----------------------+-----------+\n| user             | authentication_string                     | plugin                | host      |\n+------------------+-------------------------------------------+-----------------------+-----------+\n| root             |                                           | mysql_native_password | localhost |\n| mysql.session    | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |\n| mysql.sys        | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |\n| debian-sys-maint | *CC744277A401A7D25BE1CA89AFF17BF607F876FF | mysql_native_password | localhost |\n+------------------+-------------------------------------------+-----------------------+-----------+\n4 rows in set (0.00 sec)\n</code></pre> <p>Una vez que confirme esto en su propio servidor, puede salir del shell de MySQL:</p> <pre><code>exit\n</code></pre>"},{"location":"instalaciones/#crear-nuevo-usuario","title":"Crear nuevo usuario","text":"<p>Alternativamente, para otras personas puede adaptarse mejor a su flujo de trabajo si se conectan a MySQL con un usuario dedicado. Para crear tal usuario, vuelva a abrir el shell de MySQL nuevamente:</p> <p>Nota</p> <p>Si tiene la autenticaci\u00f3n de contrase\u00f1a habilitada para root seg\u00fan se describi\u00f3 en los p\u00e1rrafos de arriba, deber\u00e1 usar un comando diferente para acceder al shell de MySQL. Lo que se indica a continuaci\u00f3n ejecutar\u00e1 su cliente MySQL con privilegios de usuario regular, y solamente tendr\u00e1 privilegios de administrador dentro de la base de datos una vez que haga la autenticaci\u00f3n:</p> <pre><code>mysql -u root -p\n</code></pre> <p>Apartir de aqui vamos a crear el nuevo usuario</p> <pre><code>CREATE USER 'nombre_de_usuario'@'localhost' IDENTIFIED BY 'contrase\u00f1a';\n</code></pre> <p>Ahora vamos a darle los privilegios adecuados para conceder persmiso de las tablas de una base de datos, as\u00ed como autoridad para agregar, cambiar y eliminar privilegios de usuario, mediante este comando:</p> <pre><code>GRANT ALL PRIVILEGES ON *.* TO 'nombre_de_usuario'@'localhost' WITH GRANT OPTION;\n</code></pre> <p>Note que, en este punto, no necesita volver a ejecutar el comando <code>FLUSH PRIVILEGES</code>. Solamente necesita este comando al modificar las tablas grant utilizando declaraciones como <code>INSERT</code>, <code>UPDATE</code> o <code>DELETE</code>. Dado a que cre\u00f3 un usuario nuevo en vez de modificar uno existente, no es necesario que use <code>FLUSH PRIVILEGES</code> aqu\u00ed.</p> <p>Salimos del shell de MySQL</p> <pre><code>exit\n</code></pre>"},{"location":"instalaciones/#paso-4-probar-mysql","title":"Paso 4: Probar MySQL","text":"<p>Para ver el estado del servidor de MySQL podemos utilizar el siguiente comando</p> <pre><code>systemctl status mysql.service\n</code></pre> <p>La Salida debe ser similar a la siguiente:</p> <pre><code> mysql.service - MySQL Community Server\n   Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset: en\n   Active: active (running) since Wed 2018-04-23 21:21:25 UTC; 30min ago\n Main PID: 3754 (mysqld)\n    Tasks: 28\n   Memory: 142.3M\n      CPU: 1.994s\n   CGroup: /system.slice/mysql.service\n           \u2514\u25003754 /usr/sbin/mysqld\n</code></pre> <p>Si MySQL no se est\u00e1 ejecutando se puede utilizar el siguiente comando:</p> <pre><code>sudo systemctl start mysql\n</code></pre>"},{"location":"instalaciones/#version-mysql","title":"Versi\u00f3n MySQL","text":"<p>Versi\u00f3n servidor #1</p> <p>La versi\u00f3n de Servidor de MyQSL instalado en el Droplets (Servidor #1) es la 5.7.35 </p> <p>Versi\u00f3n servidor #2</p> <p>La versi\u00f3n de Servidor de MyQSL instalado en el Droplets (Servidor #2) es la 8.0.22 </p>"},{"location":"instalaciones/#acceso-remoto-por-mysql","title":"ACCESO REMOTO POR MySQL","text":"<p>En los siguientes pasos se configurar\u00e1 a MySQL para establecer conexiones remota, ya que la configuraci\u00f3n que se realiz\u00f3 en el tema anterior de Instalar MySQL solo est\u00e1 configurada para escuchar conexiones locales. Esta es la configuraci\u00f3n predeterminada de MySQL, pero no funcionar\u00e1 para una configuraci\u00f3n de base de datos remota, ya que MySQL debe poder escuchar una direcci\u00f3n IP externa donde se pueda acceder al servidor. Para habilitar esto, abra su <code>mysqld.cnfarchivo</code>:</p>"},{"location":"instalaciones/#paso-1-abrir-el-archivo-de-configuracion","title":"Paso 1: Abrir el archivo de configuraci\u00f3n","text":"<pre><code>sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf\n</code></pre> <p>Navegar hasta la linea que comienza con <code>bind-address</code> directiva:</p> <pre><code>. . .\nlc-messages-dir = /usr/share/mysql\nskip-external-locking\n#\n# Instead of skip-networking the default is now to listen only on\n# localhost which is more compatible and is not less secure.\nbind-address            = 127.0.0.1\n. . .\n</code></pre> <p>De forma predeterminada, este valor se establece en 127.0.0.1, lo que significa que el servidor solo buscar\u00e1 conexiones locales. Se deber\u00e1 cambiar esta directiva para hacer referencia a una direcci\u00f3n IP externa. Para cambiar la directiva a una direcci\u00f3n IP se usar\u00e1 comod\u00edn, ya sea <code>*</code>, <code>::</code> o <code>0.0.0.0</code>, Adicional a ello vamos a comentar otra linea para que se pueda acceder de forma remota, la linea a comentar con un comodin ser\u00e1 la siguiente <code>skip-external-locking</code> </p> <pre><code>. . .\nlc-messages-dir = /usr/share/mysql\n# skip-external-locking\n#\n# Instead of skip-networking the default is now to listen only on\n# localhost which is more compatible and is not less secure.\nbind-address            = 0.0.0.0\n. . .\n</code></pre> <p>Despues de cambiar esa linea se proceder\u00e1 a guardar los cambios (Ctrl + s) y cerrar (Ctrl + x).</p>"},{"location":"instalaciones/#paso-2-reiniciar-el-servidor","title":"Paso 2:  Reiniciar el servidor","text":"<p>Luego se reiniciar\u00e1 el servicio MySQL para poner mysqld.cnfen vigencia los cambios que se realiz\u00f3:</p> <pre><code>sudo systemctl restart mysql\n</code></pre>"},{"location":"instalaciones/#paso-3-configurar-usuario-remoto","title":"Paso 3: Configurar usuario remoto","text":"<p>Para conectarse a la base de datos desde un HOST remoto, se deber\u00e1 configurar una cuenta o un usuario para que aceptes las conexiones fuera de <code>localhost</code> para ello vamos a iniciar sesi\u00f3n desde la terminal de ubuntu</p> <pre><code>mysql -u root -p\n</code></pre> <p>Para cambiar el host de un usuario, se puede usar el <code>RENAME USER</code> comando de MySQL . Ejecute el siguiente comando, asegur\u00e1ndose de cambiar <code>nombre_usuario</code> el nombre de su cuenta de usuario de MySQL y <code>remote_server_ip</code> la direcci\u00f3n IP de su servidor remoto:</p> <pre><code>RENAME USER 'nombre_usuario'@'localhost' TO 'nombre_usuario'@'remote_server_ip';\n</code></pre> <p>Alternativamente, se puede crear una nueva cuenta de usuario que solo se conectar\u00e1 desde el host remoto con el siguiente comando:</p> <pre><code>CREATE USER 'nombre_usuario'@'remote_server_ip' IDENTIFIED BY 'password';\n</code></pre> <p>Nota</p> <p>Este comando crear\u00e1 un usuario que se autentica con el plugin de autenticaci\u00f3n por defecto de MySQL, <code>caching_sha2_password</code>. Sin embargo, existe un problema conocido con algunas versiones de PHP que puede causar problemas con este complemento.</p> <p>Si se planea usar esta base de datos con una aplicaci\u00f3n PHP, phpMyAdmin, por ejemplo, es posible que desee crear un usuario remoto que se autentique con el <code>mysql_native_password</code> complemento m\u00e1s antiguo, aunque a\u00fan seguro, en su lugar:</p> <p><pre><code>CREATE USER 'nombre_usuario'@'remote_server_ip' IDENTIFIED WITH mysql_native_password BY 'password';\n</code></pre> Si no est\u00e1 seguro, siempre puede crear un usuario que se autentique con <code>caching_sha2_plugin</code> y luego ALTERm\u00e1s tarde con este comando:</p> <pre><code>ALTER USER 'nombre_usuario'@'remote_server_ip' IDENTIFIED WITH mysql_native_password BY 'password';\n</code></pre>"},{"location":"instalaciones/#paso-4-conceder-permisos-a-un-usuario","title":"Paso 4: Conceder permisos a un usuario","text":"<p>se puede conceder varios privilegios y restricciones al nuevo usuario creado con el fin de garantizar la seguridad de sus acciones. . El siguiente ejemplo se concede a un usuario privilegios globales a <code>CREATE</code>, <code>ALTER</code> y <code>DROP</code> bases de datos, tablas y usuarios, as\u00ed como el poder de <code>INSERT</code>, <code>UPDATE</code> y <code>DELETE</code> datos de cualquier tabla en el servidor. Tambi\u00e9n le otorga al usuario la capacidad de consultar datos <code>SELECT</code>, crear claves externas con la <code>REFERENCES</code> palabra clave y realizar <code>FLUSH</code> operaciones con el <code>RELOAD</code> privilegio.</p> <p>Este comando aplica para conectarse de forma remota para una ip espec\u00edfica</p> <pre><code>GRANT CREATE, ALTER, DROP, INSERT, UPDATE, DELETE, SELECT, REFERENCES, RELOAD on *.* TO 'nombre_usuario'@'remote_server_ip' WITH GRANT OPTION;\n</code></pre> <p>tambien se puede conceder permisos de esta otra forma (para este ejemplo se lo aplicaremos al usuario remote), </p> <p>este comando aplica para conectarse desde cualquier IP que intente establcer conexi\u00f3n de forma remota.</p> <pre><code>GRANT ALL PRIVILEGES ON *.* TO 'remote'@'%' WITH GRANT OPTION;\n</code></pre> <p>Despu\u00e9s de esto, es una buena pr\u00e1ctica ejecutar el <code>FLUSH PRIVILEGES</code> comando. Esto liberar\u00e1 cualquier memoria que el servidor haya almacenado en cach\u00e9 como resultado de las declaraciones <code>CREATE USER</code> y anteriores <code>GRANT</code>:</p> <pre><code>FLUSH PRIVILEGES;\n</code></pre> <p>Luego salimos del cliente de MySQL</p> <p><pre><code>exit;\n</code></pre> Por \u00faltimo, suponiendo que haya configurado un firewall en su servidor de base de datos, tambi\u00e9n deber\u00e1 abrir el puerto 3306, el puerto predeterminado de MySQL, para permitir el tr\u00e1fico a MySQL.</p> <p>Se puede ejecutar el siguiente comando para acceder de forma remota a la base de datos.</p> <pre><code>mysql -u user -h database_server_ip -p\n</code></pre>"},{"location":"instalaciones/#instalar-servidor-web-nginx","title":"INSTALAR SERVIDOR WEB NGINX","text":""},{"location":"instalaciones/#requisito-previos_1","title":"Requisito previos","text":"<p>Para la instalaci\u00f3n del servidor de web se nesesitar\u00e1 lo siguiente:</p> <ul> <li>Un servidor Ubuntu 18.04/20.04 configurado siguiendo esta gu\u00eda de configuraci\u00f3n inicial para servidores ubuntu 18.04/20.04, incluyendo un usuario <code>no root</code> con privilegios de <code>sudo</code>.</li> </ul>"},{"location":"instalaciones/#paso-1-instalar-nginx","title":"Paso 1: Instalar NGINX","text":"<p>Nginx ya se encuentra en los repositorio predeterminado de ubuntu podemos ejecutar el siguiente comando para instalarlo</p> <p><pre><code>sudo apt update\n</code></pre> luego ejecutamos el siguiente programa para instalarlo.</p> <pre><code>sudo apt install nginx\n</code></pre> <p>Tras aceptar el procedimiento, apt instalar\u00e1 Nginx y cualquier dependencia necesaria en su servidor.</p>"},{"location":"instalaciones/#paso-2-aplicar-ajuste-de-firewall","title":"Paso 2: Aplicar ajuste de firewall","text":"<p>Se debe de aplicar unos ajustes al software de firewall para permitir acceso a nginx, enumeremos las configuraciones de firewall ejecutando el siguiente comando</p> <pre><code>sudo ufw app list\n</code></pre> <p>La salida debe ser similar a la siguiente.</p> <pre><code>Available applications:\n  Nginx Full\n  Nginx HTTP\n  Nginx HTTPS\n  OpenSSH\n</code></pre> <p>Como se muestra en el resultado, hay tres perfiles disponibles para Nginx:</p> <ul> <li>Nginx Full: este perfil abre el puerto 80 (tr\u00e1fico web normal, no cifrado) y el puerto 443 (tr\u00e1fico TLS/SSL cifrado)</li> <li>Nginx HTTP: este perfil abre solo el puerto 80 (tr\u00e1fico web normal, no cifrado)</li> <li>Nginx HTTPS: este perfil abre solo el puerto 443 (tr\u00e1fico TLS/SSL cifrado)</li> </ul> <p>Para habilitar un perfil se debe de escribir el siguiente comando.</p> <pre><code>sudo ufw allow 'Nginx HTTP'\n</code></pre> <p>Verificamos si la regla esta creada</p> <pre><code>sudo ufw status\n</code></pre> <p>La salida debe ser como la siguiente:</p> <pre><code>Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere                  \nNginx HTTP                 ALLOW       Anywhere                  \nOpenSSH (v6)               ALLOW       Anywhere (v6)             \nNginx HTTP (v6)            ALLOW       Anywhere (v6)\n</code></pre>"},{"location":"instalaciones/#paso-3-comprobar-el-servidor-web","title":"Paso 3: Comprobar el servidor web","text":"<p>Realice una verificaci\u00f3n con systemd init para asegurarse de que el servicio est\u00e9 en ejecuci\u00f3n escribiendo lo siguiente:</p> <pre><code>systemctl status nginx\n</code></pre> <p>La salida debe ser similar a la siguiente:</p> <pre><code>nginx.service - A high performance web server and a reverse proxy server\n   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)\n   Active: active (running) since Fri 2020-04-20 16:08:19 UTC; 3 days ago\n     Docs: man:nginx(8)\n Main PID: 2369 (nginx)\n    Tasks: 2 (limit: 1153)\n   Memory: 3.5M\n   CGroup: /system.slice/nginx.service\n           \u251c\u25002369 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;\n           \u2514\u25002380 nginx: worker process\n</code></pre> <p>Si todo se ha ejecutado con exito podemos probar nuestro servidor web en el navegador, escribiendo lo siguiente:</p> <p>http://su_servidor_ip</p> <p>si aparece un mensaje de Welcome to nginx! significa que el servidor web esta instalado correctamente.</p>"},{"location":"instalaciones/#paso-4-configurar-bloques-de-servidores","title":"Paso 4: Configurar bloques de servidores","text":"<p>Utilizaremos bloques de servidor (similares a host virtuales de Apache). para encapsular los detalles de la configuraci\u00f3n y alojar m\u00e1s de un dominio desde un \u00fanico servidor. Configuraremos un dominio llamado <code>aps.tkontrol.com</code>.</p> <p>el proyecto web est\u00e1 en la siguiente direcci\u00f3n:</p> <pre><code>cd /var/www/html\n</code></pre> <p>Una vez estando dentro de ese directorio descargamos la aplicaci\u00f3n web de <code>APS TKONTROL MONITOREO</code> que esta en el repositorio de GitHub, su directorio se llama <code>dist</code> y la ruta absoluta que vamos a ocupar para apuntar en el servidor web es la siguiente:</p> <p>/var/www/html/dist</p> <p>Vamos a crear unos bloques de servidores para el funcionamiento correcto de la aplicaciones que se desplegan en la plataforma <code>https://aps.tkontrol.com</code>, abriremos el archivo <code>deafult</code> y lo modificaremos, utilizamos el siguiente comando.</p> <pre><code>sudo nano /etc/nginx/sites-available/default\n</code></pre> <p>El siguiente bloque de configuraci\u00f3n, es un ejemplo b\u00e1sico de la estructura que debe de tener.</p> <pre><code>server {\n        listen 80;\n        listen [::]:80;\n\n        root /var/www/html/dist;\n        index index.html index.htm index.nginx-debian.html index.php;\n\n        server_name aps.tkontrol.com;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n</code></pre> <p>Importante</p> <p>La salida anterior es un ejemplo default que trae el bloque de servidor, los bloques de servidores modificados se encuentran mas adelante detallado correctamente.</p> <p>Si no hay problemas, reinicie Nginx para habilitar los cambios:</p> <pre><code>sudo systemctl restart nginx\n</code></pre> <p>verificamos que cargue la aplicaci\u00f3n el servidor web NGINX digitando la siguiente url en el navegador.</p> <p>http://aps.tkontrol.com</p>"},{"location":"instalaciones/#paso-5-familiarizarse-con-archivos-y-directorios-importantes","title":"paso 5: Familiarizarse con archivos y directorios importantes","text":"<p>Ahora que sabe administrar el propio servicio de Nginx, deber\u00eda tomarse unos minutos para familiarizarse con algunos directorios y archivos importantes.</p> <p>Descripci\u00f3n de atributos</p> <ul> <li><code>listen</code>: el puerto que abrir\u00e1 para las conexiones</li> <li><code>root</code>: directorio del proyecto, se debe de utilizar rutas absolutas para hacer esta referencia</li> <li><code>server_name</code>: en este atributo va el nombre del dominio en nuestro caso tenemos el dominio aps.tkontrol.com</li> <li><code>location</code>: se ocupara para realizar proxy inversos</li> </ul> <p>Contenido</p> <ul> <li><code>/var/www/html</code>: el contenido web real, que por defecto solo consta de la p\u00e1gina predeterminada de Nginx que vio antes, se presenta desde el directorio /var/www/html. Esto se puede cambiar modificando los archivos de configuraci\u00f3n de Nginx.</li> </ul> <p>Configuraci\u00f3n del servidor</p> <ul> <li><code>/etc/nginx</code>: directorio de configuraci\u00f3n de Nginx. En \u00e9l se encuentran todos los archivos de configuraci\u00f3n de Nginx.</li> <li><code>/etc/nginx/nginx.conf</code>: archivo de configuraci\u00f3n principal de Nginx. Esto se puede modificar para realizar cambios en la configuraci\u00f3n general de Nginx.</li> <li><code>/etc/nginx/sites-available/</code>: directorio en el que se pueden guardar bloques de servidor por sitio. Nginx no utilizar\u00e1 los archivos de configuraci\u00f3n de este directorio a menos que est\u00e9n vinculados al directorio sites-enabled. Normalmente, toda la configuraci\u00f3n del bloque de servidor se realiza en este directorio y luego se habilita estableciendo un v\u00ednculo con el otro directorio.</li> <li><code>/etc/nginx/sites-enabled/</code>: directorio en el que se almacenan los bloques de servidor habilitados por sitio. Normalmente, estos se crean estableciendo v\u00ednculos con los archivos de configuraci\u00f3n del directorio sites-available.</li> <li><code>/etc/nginx/snippets</code>: este directorio contiene fragmentos de configuraci\u00f3n que pueden incluirse en otras partes de la configuraci\u00f3n de Nginx. Los segmentos de configuraci\u00f3n potencialmente repetibles re\u00fanen las condiciones para la conversi\u00f3n a fragmentos.</li> </ul> <p>Registros del servidor</p> <ul> <li><code>/var/log/nginx/access.log</code>: cada solicitud a su servidor web se registra en este archivo de registro, a menos que Nginx est\u00e9 configurado para hacer algo diferente.</li> </ul>"},{"location":"instalaciones/#paso-6-archivos-de-configuracion-de-nginx","title":"Paso 6: Archivos de configuraci\u00f3n de nginx","text":"<p>A continuaci\u00f3n se detallan los archivos de configuraci\u00f3n implementado en los servidores de APS TKONTROL</p> <ul> <li> Archivos de configuraci\u00f3n nginx </li> </ul> <p>Nota</p> <p>El archivo de configuraci\u00f3n mostrado anteriormente ya tiene los certificados de Let's Encrypt instalados en el servidor web, para saber como se configur\u00f3 eso, hay que seguir el siguiente tutorial de instalaci\u00f3n de certificados SSL Let's Encrypt con certbot.</p>"},{"location":"instalaciones/#version-nginx","title":"Versi\u00f3n nginx","text":"<p>Versi\u00f3n servidor #1</p> <p>La versi\u00f3n de Servidor de web instalado en el Droplets (Servidor #1) es la 1.18.0 </p> <p>Versi\u00f3n servidor #2</p> <p>La versi\u00f3n de Servidor de web instalado en el Droplets (Servidor #2) es la 1.18.0 </p>"},{"location":"instalaciones/#instalar-certificados-ssl","title":"INSTALAR CERTIFICADOS SSL","text":"<p>Se usar\u00e1 Cerbot para obtener un certificado SSL gratuito que se podr\u00e1 usar en nginx y ser renovado automaticamente cuando se termine el periodo de cada certificado instalado.</p> <p>Se usar\u00e1 archivos de bloques separados en nginx, para su configuraci\u00f3n de los certificados SSL.</p>"},{"location":"instalaciones/#requisitos-previos_1","title":"Requisitos previos","text":"<ul> <li>Un servidor Ubuntu 18.04/20.04 configurado siguiendo esta gu\u00eda de configuraci\u00f3n inicial para servidores ubuntu 18.04/20.04, incluyendo un usuario <code>no root</code> con privilegios de <code>sudo</code>.</li> <li>Un nombre de dominio registrado y funcional. en nuestro caso utilizaremos aps.tkontrol.com, que fue comprado en GoDaddy</li> <li>La configuraci\u00f3n de los siguientes dos registros DNS para el servidor. Se puede seguir la configuraci\u00f3n de registro DNS en  Agregar un registro A en un dominio para obtener detalles y el proceso para adicionarlos:<ul> <li>Un registro A con aps.tkontrol.com apuntando a la direcci\u00f3n IP p\u00fablica del servidor.</li> <li>Un registro A con www.aps.tkontrol.com apuntando a la direcci\u00f3n IP p\u00fablica del servidor.</li> </ul> </li> <li>Nginx instalado, se debe asegurar de tener un bloque de servidor para el dominio, sino se ha configurado uno se puede guiar de la siguiente documentaci\u00f3n: instalar servidor web NGINX.</li> </ul>"},{"location":"instalaciones/#paso-1-instalar-cerbot","title":"Paso 1: Instalar cerbot","text":"<p>El primer paso ser\u00e1 obtener el certificado SSL mediante Let's Encrypt para ello vamos a ocupar cerbot.</p> <p>A\u00f1adimos cerbot al repositorio.</p> <pre><code>sudo add-apt-repository ppa:certbot/certbot\n</code></pre> <p>Necesitar\u00e1s presionar Enter para aceptar. Luego, se actualiza la lista de paquetes para recolectar la informaci\u00f3n de los paquetes del nuevo repositorio, ahora ejecutamos el siguiente comando para actualizar los paquetes:</p> <p><pre><code>sudo apt update\n</code></pre> Ahora instalamos el cerbot-nginx</p> <pre><code>sudo apt install python-certbot-nginx\n</code></pre>"},{"location":"instalaciones/#paso-2-confirmar-la-configuracion-de-nginx","title":"Paso 2: Confirmar la configuraci\u00f3n de nginx","text":"<p>Certbot necesita estar habilitado para encontrar el bloque de <code>server</code> en tu configuraci\u00f3n de Nginx, de tal manera que que pueda configurar el SSL de forma autom\u00e1tica. Espec\u00edficamente, lo hace mediante la b\u00fasqueda de la directiva <code>server_name</code> que contiene el dominio del cual solicitaste el certificado.</p> <p>Para verificar, se proceder\u00e1 abrir el bloque de servidor utilizando el editor <code>nano</code> u otro editor de texto.</p> <pre><code>sudo nano /etc/nginx/sites-available/default\n</code></pre> <p>Buscar la l\u00ednea: <code>server_name</code>, que deber\u00eda verse similar a la siguiente salida:</p> <pre><code>...\nserver_name aps.tkontrol.com;\n...\n</code></pre> <p>Si la l\u00ednea concuerda con lo anterior, guardar los cambios (Ctrl + c), salir del archivo(Crtl + x) y contin\u00faa con el siguiente paso.</p> <p>Ejecutar el siguiente comando para verificar que el archivo de configuraci\u00f3n no tenga ningun errror</p> <pre><code>sudo nginx -t\n</code></pre> <p>si se deplega algun error, volver abrir el archivo y solucionar el error. Luego ejecutamos el siguiente comando para reinicar el servidor web</p> <pre><code>sudo systemctl reload nginx\n</code></pre> <p>Certbot podr\u00e1 ahora encontrar el bloque de servidor correcto y podr\u00e1 actualizarlo. A continuaci\u00f3n, actualizaremos el cortafuegos para permitir el tr\u00e1fico HTTPS.</p>"},{"location":"instalaciones/#paso-3-permitir-https-a-traves-de-cortafuegos","title":"Paso 3: Permitir HTTPS a trav\u00e9s de cortafuegos","text":"<p>Vamos habilitar las el tr\u00e1fico <code>https</code> en nginx utilizando el cortafuego <code>UFW</code>. revisemos el ajuste que tiene, utilizando el siguiente comando.</p> <pre><code>sudo ufw status\n</code></pre> <p>Si solo sale informaci\u00f3n con tr\u00e1fico <code>HTTP</code> quiere decir que solo hay conexiones con ese tipo de tr\u00e1fico.</p> <pre><code>Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere                  \nNginx HTTP                 ALLOW       Anywhere                  \nOpenSSH (v6)               ALLOW       Anywhere (v6)             \nNginx HTTP (v6)            ALLOW       Anywhere (v6)\n</code></pre> <p>Para permitir adicionalmente, el tr\u00e1fico HTTPS, se debe habilitar el perfil completo de Nginx y borrar los perfiles redundantes, ejecute el siguiente comando:</p> <pre><code>sudo ufw allow 'Nginx Full'\n</code></pre> <p><pre><code>sudo ufw delete allow 'Nginx HTTP'\n</code></pre> Verificamos que se haya aplicado los cambios con los comandos ejecutados anteriormente</p> <p><pre><code>sudo ufw status\n</code></pre> La Salida debe de mostrarse similar a la siguiente.</p> <pre><code>Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere\nNginx Full                 ALLOW       Anywhere\nOpenSSH (v6)               ALLOW       Anywhere (v6)\nNginx Full (v6)            ALLOW       Anywhere (v6)\n</code></pre>"},{"location":"instalaciones/#paso-4-obtener-certificado-ssl","title":"Paso 4: Obtener certificado SSL","text":"<p>Para obtener el certificado SSL vamos a ocupar cerbot el cual provee de varias maneras de obtener los certificados, vamos a usar el conector de nginx que se encargara de construirlo, ejecute el siguiente comando </p> <p>Atenci\u00f3n</p> <p>Se debe de tener ya el dominio configurado en nginx y con un registro A apuntando al sevidor para que este paso funcione.</p> <pre><code>sudo certbot --nginx -d aps.tkontrol.com -d www.aps.tkontrol.com\n</code></pre> <p>Esto ejecuta certbot con el conector <code>--nginx</code>, usando <code>-d</code> para especificar los nombres sobre los cuales queremos que el certificado sea v\u00e1lido.</p> <p>Si \u00e9sta es la primera vez que se ejecuta <code>certbot</code>, se te solicitar\u00e1 que ingrese <code>una direcci\u00f3n de correo electr\u00f3nico</code> y que acepte los t\u00e9rminos de servicio. Al hacerlo, certbot se comunicar\u00e1 con el servidor Let\u2019s Encrypt, para intentar verificar que usted controla el dominio para el cual se est\u00e1 solicitando el certificado.</p> <p>En caso de \u00e9xito, certbot preguntar\u00e1 c\u00f3mo configurar los ajustes para HTTPS:</p> <pre><code>Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.\n-------------------------------------------------------------------------------\n1: No redirect - Make no further changes to the webserver configuration.\n2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for\nnew sites, or if you're confident your site works on HTTPS. You can undo this\nchange by editing your web server's configuration.\n-------------------------------------------------------------------------------\nSelect the appropriate number [1-2] then [enter] (press 'c' to cancel):\n</code></pre> <p>El mensaje anterior permitir\u00e1 escoger entre redireccionar o no el tr\u00e1fico de HTTP a HTTPS, limitando el acceso HTTP; seleccionamos la segunda opcion escribiendo <code>2</code> y luego damos <code>ENTER</code>.</p> <p>La configuraci\u00f3n ser\u00e1 actualizada, y <code>nginx</code> se recargar\u00e1 para activar los nuevos ajustes. certbot concluir\u00e1 con un mensaje informando que el proceso fue exitoso y la localizaci\u00f3n de tus certificados</p> <p>La Salida debe ser similar a la siguiente:</p> <pre><code>IMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/aps.tkontrol.com/fullchain.pem\n   Your key file has been saved at:\n   /etc/letsencrypt/live/aps.tkontrol.com.com/privkey.pem\n   Your cert will expire on 2022-07-23. To obtain a new or tweaked\n   version of this certificate in the future, simply run certbot again\n   with the \"certonly\" option. To non-interactively renew *all* of\n   your certificates, run \"certbot renew\"\n - Your account credentials have been saved in your Certbot\n   configuration directory at /etc/letsencrypt. You should make a\n   secure backup of this folder now. This configuration directory will\n   also contain certificates and private keys obtained by Certbot so\n   making regular backups of this folder is ideal.\n - If you like Certbot, please consider supporting our work by:\n\n   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n   Donating to EFF:                    https://eff.org/donate-le\n</code></pre> <p>Para este punto los certificados ya deberian de estar instalados y cargados, se puede probar utilizando cualquier navegador de su preferencia y escribiendo <code>https://</code> antes de su dominio. el archivos de configuraci\u00f3n completo en nginx implementado en aps.tkontrol.com se detalla a continuaci\u00f3n</p> <pre><code>sudo nano /etc/nginx/sites-available/default\n</code></pre> <p>tambien puede ver los archivos de configuracion en: Archivos de configuraci\u00f3n de NGINX</p>"},{"location":"instalaciones/#paso-5-renovacion-automatica-con-cerbot","title":"Paso 5: Renovaci\u00f3n autom\u00e1tica con Cerbot","text":"<p>Los certificados de <code>Let\u2019s Encrypt</code> son v\u00e1lidos por noventa d\u00edas \u00fanicamente. Esto se hace con el fin de incentivar a los usuarios para que automaticen el proceso de renovaci\u00f3n de certificados. El paquete certbot que instalamos ya se ha ocupado de adicionar un archivo de comandos de renovaci\u00f3n en <code>/etc/cron.d</code>. Este archivo de comandos se ejecuta dos veces al d\u00eda y renovar\u00e1 autom\u00e1ticamente los certificados que presenten una fecha de expiraci\u00f3n dentro de los siguientes treinta d\u00edas.</p> <p>Para probar el proceso de renovaci\u00f3n, puedes hacer un ensayo mediante <code>certbot</code>:</p> <p><pre><code>sudo certbot renew --dry-run\n</code></pre> Si no se despliegan errores, el proceso se encuentra funcional. De ser necesario, Certbot renovar\u00e1 tus certificados y recargar\u00e1 Nginx para activar los cambios. Si el proceso autom\u00e1tico de renovaci\u00f3n alguna vez fallase, Let\u2019s Encrypt enviar\u00e1 un mensaje al correo electr\u00f3nico que especificaste, alertando que tu certificado se encuentra pr\u00f3ximo a expirar.</p>"},{"location":"instalaciones/#configuracion-de-registros-dns","title":"CONFIGURACI\u00d3N DE REGISTROS DNS","text":""},{"location":"instalaciones/#agregar-un-registro-a-en-un-dominio","title":"Agregar un registro A en un dominio","text":"<p>Los registros A o de direcci\u00f3n (tambi\u00e9n denominados registros de host) asocian un dominio a una direcci\u00f3n IP</p> <p>Los siguientes pasos son importante para a\u00f1adir los registros DNS a digitalOcean</p> <ol> <li>Iniciamos sesi\u00f3n en DigitalOcean.com</li> <li>Selecionamos el proyecto al cual se le quiere a\u00f1adir el registro DNS, en nuestro caso eligiremos el proyecto <code>Server</code>, debemos de tener una ventana similar a la siguiente. </li> <li>Sino se tiene un dominio, se puede agregar dando click en los 3 puntos que aparece en la parte derecha del Droplets y click en <code>Add domain</code>.</li> <li>una vez creado, seleccionamos el dominio agregado, seleccionamos el registro A y llenamos los siguientes parametros.<ul> <li>HOSTNAME: nombre del host que vamos a registrar en la plataforma en nuestro caso ser\u00e1 <code>aps.tkontrol.com</code>.</li> <li>WILL DIRECT TO: este ser\u00e1 el proyecto al cual va apuntar el registro DNS en nuestro caso ser\u00e1 el servidor con el nombre <code>nodejs-s-2vcpu-4gb-sfo2-01</code>.</li> <li>TTL: tiempo, se dejara por defecto el que marca la plataforma. </li> </ul> </li> <li>una vez llenado los campos se da click en <code>create record</code>. debe quedar registrado de la siguiente manera. </li> </ol>"},{"location":"instalaciones/#configurar-servidor-ftp-vsftpd","title":"CONFIGURAR SERVIDOR FTP (VSFTPD)","text":""},{"location":"instalaciones/#requisito-previos_2","title":"Requisito previos","text":"<p>Para la instalaci\u00f3n del servidor de web se nesesitar\u00e1 lo siguiente:</p> <ul> <li> <p>Un servidor Ubuntu 18.04/20.04 configurado siguiendo esta gu\u00eda de configuraci\u00f3n inicial para servidores ubuntu 18.04/20.04, incluyendo un usuario <code>no root</code> con privilegios de <code>sudo</code>.</p> </li> <li> <p>Un cliente FTP para poder acceder de forma remota a VSFTPD cuando ya se haya instalado</p> </li> </ul>"},{"location":"instalaciones/#paso-1-instalacion","title":"Paso 1: instalaci\u00f3n","text":"<p>se ejecutar\u00e1 el siguiente comando para actualizar paquetes del sistema</p> <pre><code>sudo apt update\n</code></pre> <p>Luego de actualizar los paquetes, instalamos el demonio VSTPD</p> <pre><code>sudo apt install vsftpd\n</code></pre> <p>Una vez completado la instalaci\u00f3n se realizar\u00e1 un respaldo del archivo de configuraci\u00f3n original ya que que este archivo se ver\u00e1 modificado por el usuario para tener accesos remoto y en caso que falle se tendr\u00e1 el respaldo.</p> <pre><code>sudo cp /etc/vsftpd.conf /etc/vsftpd.conf.orig\n</code></pre> <p>con el comando anterior nos quedar\u00e1 la informaci\u00f3n de la siguiente manera</p> <p></p>"},{"location":"instalaciones/#paso-2-abrir-cortafuegos","title":"Paso 2: Abrir cortafuegos","text":"<p>Atenci\u00f3n</p> <p>Primero verificar el estado del cortafuego UFW, si esta inabilitado bloqueara las conexiones externas, ejecute el siguiente comando para habilitar el cortafuego</p> <pre><code>sudo ufw enable\n</code></pre> <p>Verificamos el estado de UFW</p> <pre><code>sudo ufw status\n</code></pre> <p>Esta salida revela que el firewall est\u00e1 activo y solo se permite SSH a trav\u00e9s de:</p> <pre><code>Output\nStatus: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere\nOpenSSH (v6)               ALLOW       Anywhere (v6)\n</code></pre> <p>Ahora agregaremos reglas para tr\u00e1fico FTP, ejecutando el siguiente comando</p> <pre><code>sudo ufw allow 20,21,990/tcp\n</code></pre> <p>A continuaci\u00f3n, abra los puertos 40000-50000para el rango de puertos pasivos que configurar\u00e1 en el archivo de configuraci\u00f3n:</p> <pre><code>sudo ufw allow 40000:50000/tcp\n</code></pre> <p>Verificamos el estado del cortafuego.</p> <pre><code>sudo ufw status\n</code></pre> <p>El resultado debe ser similar a la siguiente pantalla</p> <pre><code>Output\nStatus: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere\n20,21,990/tcp              ALLOW       Anywhere\n40000:50000/tcp            ALLOW       Anywhere\nOpenSSH (v6)               ALLOW       Anywhere (v6)\n20,21,990/tcp (v6)         ALLOW       Anywhere (v6)\n40000:50000/tcp (v6)       ALLOW       Anywhere (v6)\n</code></pre>"},{"location":"instalaciones/#paso-3-crear-usuario","title":"Paso 3: Crear usuario","text":"<p>Se crear\u00e1 un usuario FTP dedicado, se debe de ejecutar el siguiente comando (el usuario mostrado es uno real que se ocupa actualmente en los equipos de transmisi\u00f3n de datos de Syrus en su configuraci\u00f3n interna).</p> <pre><code>sudo adduser tkontrol\n</code></pre> <p>Le solicitar\u00e1 una contrase\u00f1a, la cual se digitar\u00e1 la siguiente: <code>Tkontrol10</code>.</p>"},{"location":"instalaciones/#paso-4-restringir-directorio-a-usuario","title":"Paso 4: Restringir directorio a usuario","text":"<p>Le asignaremos un directorio al nuevo usuario creado para que tenga acceso ahi y pueda subir y descargar archivos.</p> <p>Creamos la carpeta</p> <pre><code>sudo mkdir /home/sammy/ftp\n</code></pre>"},{"location":"mantenimientos/","title":"Mantenimientos de servidores","text":""},{"location":"mantenimientos/#servidor-ubuntu","title":"Servidor Ubuntu","text":""},{"location":"mantenimientos/#actualizacion-de-paquetes","title":"Actualizaci\u00f3n de paquetes","text":"<p>Actualizaci\u00f3n de paquetes periodicos que no se instalan automaticamente y nesesitan intervencion humana, los siguientes comando se ejecutar\u00e1n con exito con un usuario <code>root</code>. <pre><code>sudo apt-get update &amp;&amp; sudo apt-get dist-upgrade\n</code></pre></p>"}]}